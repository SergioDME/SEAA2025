-------------------------------------------------------------------------------
Test set: LayeredArchitectureTest
-------------------------------------------------------------------------------
Tests run: 8, Failures: 4, Errors: 0, Skipped: 0, Time elapsed: 10.872 sec <<< FAILURE!
controller_dependencies_are_respected(LayeredArchitectureTest)  Time elapsed: 7.994 sec  <<< FAILURE!
java.lang.AssertionError: Architecture Violation [Priority: MEDIUM] - Rule 'Layered architecture consisting of
layer 'View' ('project.VIEW..')
layer 'Controller' ('project.CONTROL..')
layer 'Model' ('project.MODEL..')
layer 'Database' ('project.DAO..')
where layer 'Controller' may not be accessed by any layer' was violated (7 times):
Method <project.VIEW.EmployeeDashboard.lambda$getScene$0(project.MODEL.Employee, java.lang.Class)> calls constructor <project.CONTROL.EmployeeDashboardController.<init>(project.MODEL.Employee)> in (EmployeeDashboard.java:16)
Method <project.VIEW.EquipmentBuyingScreen.lambda$getScene$0(project.MODEL.Project, project.MODEL.EquipmentRequest, java.lang.Class)> calls constructor <project.CONTROL.EquipmentBuyingController.<init>(project.MODEL.Project, project.MODEL.EquipmentRequest)> in (EquipmentBuyingScreen.java:16)
Method <project.VIEW.EquipmentRequestCard.lambda$getScene$0(java.lang.Class)> calls constructor <project.CONTROL.EquipmentRequestCardController.<init>(project.MODEL.Laboratory, project.MODEL.Project)> in (EquipmentRequestCard.java:24)
Method <project.VIEW.HiringScreen.lambda$getScene$0(project.MODEL.Project, project.MODEL.Employee, java.lang.Class)> calls constructor <project.CONTROL.HiringScreenController.<init>(project.MODEL.Project, project.MODEL.Employee)> in (HiringScreen.java:17)
Method <project.VIEW.ProjectCard.lambda$getScene$0(project.MODEL.Project, project.MODEL.Employee, javafx.scene.control.TableView, java.lang.Class)> calls constructor <project.CONTROL.ProjectCardController.<init>(project.MODEL.Project, project.MODEL.Employee, javafx.scene.control.TableView)> in (ProjectCard.java:21)
Method <project.VIEW.ProjectSalariedDashboard.lambda$getScene$0(project.MODEL.ProjectSalaried, java.lang.Class)> calls constructor <project.CONTROL.ProjectSalariedDashboardController.<init>(project.MODEL.ProjectSalaried)> in (ProjectSalariedDashboard.java:16)
Method <project.VIEW.SelectedLaboratoryCard.lambda$getScene$0(project.MODEL.Laboratory, java.util.ArrayList, java.lang.Class)> calls constructor <project.CONTROL.SelectedLaboratoryCardController.<init>(project.MODEL.Laboratory, java.util.ArrayList)> in (SelectedLaboratoryCard.java:22)
	at com.tngtech.archunit.lang.ArchRule$Assertions.assertNoViolation(ArchRule.java:94)
	at com.tngtech.archunit.lang.ArchRule$Assertions.check(ArchRule.java:82)
	at com.tngtech.archunit.library.Architectures$LayeredArchitecture.check(Architectures.java:291)
	at com.tngtech.archunit.junit.ArchRuleExecution.evaluateOn(ArchRuleExecution.java:43)
	at com.tngtech.archunit.junit.ArchUnitRunner.runChild(ArchUnitRunner.java:154)
	at com.tngtech.archunit.junit.ArchUnitRunner.runChild(ArchUnitRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at com.tngtech.archunit.junit.ArchUnitRunner$1.evaluate(ArchUnitRunner.java:88)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

db_dependencies_are_respected(LayeredArchitectureTest)  Time elapsed: 0.015 sec  <<< FAILURE!
java.lang.AssertionError: Architecture Violation [Priority: MEDIUM] - Rule 'Layered architecture consisting of
layer 'View' ('project.VIEW..')
layer 'Controller' ('project.CONTROL..')
layer 'Model' ('project.MODEL..')
layer 'Database' ('project.DAO..')
where layer 'Database' may not be accessed by any layer' was violated (63 times):
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$3(project.DAO.ProjectDAOImplementation, project.MODEL.Project, project.MODEL.Laboratory)> calls method <project.DAO.ProjectDAOImplementation.getBuyedEquipments(project.MODEL.Project, project.MODEL.Laboratory)> in (EmployeeDashboardController.java:462)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$3(project.DAO.ProjectDAOImplementation, project.MODEL.Project, project.MODEL.Laboratory)> has parameter of type <project.DAO.ProjectDAOImplementation> in (EmployeeDashboardController.java:0)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$5(project.DAO.ProjectDAOImplementation, project.MODEL.Project, project.MODEL.Laboratory)> calls method <project.DAO.ProjectDAOImplementation.getBuyedEquipments(project.MODEL.Project, project.MODEL.Laboratory)> in (EmployeeDashboardController.java:467)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$5(project.DAO.ProjectDAOImplementation, project.MODEL.Project, project.MODEL.Laboratory)> has parameter of type <project.DAO.ProjectDAOImplementation> in (EmployeeDashboardController.java:0)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.DAO.ProjectDAOImplementation.getEquipmentRequests(java.lang.String)> in (EmployeeDashboardController.java:447)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.DAO.ProjectDAOImplementation.getProjectContracts(java.lang.String)> in (EmployeeDashboardController.java:459)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.DAO.ProjectDAOImplementation.getProjectManager(java.lang.String)> in (EmployeeDashboardController.java:453)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.DAO.ProjectDAOImplementation.getProjectReferent(java.lang.String)> in (EmployeeDashboardController.java:456)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.DAO.ProjectDAOImplementation.getWorkingLaboratories(java.lang.String)> in (EmployeeDashboardController.java:450)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> has parameter of type <project.DAO.ProjectDAOImplementation> in (EmployeeDashboardController.java:0)
Method <project.CONTROL.EmployeeDashboardController.loadProjectTab()> calls constructor <project.DAO.ProjectDAOImplementation.<init>()> in (EmployeeDashboardController.java:434)
Method <project.CONTROL.EquipmentBuyingController.buyEquipment()> calls constructor <project.DAO.ProjectDAOImplementation.<init>()> in (EquipmentBuyingController.java:125)
Method <project.CONTROL.EquipmentBuyingController.buyEquipment()> calls method <project.DAO.ProjectDAOImplementation.buyEquipment(project.MODEL.Project, project.MODEL.EquipmentRequest, java.lang.Float)> in (EquipmentBuyingController.java:135)
Method <project.CONTROL.EquipmentBuyingController.buyEquipment()> calls method <project.DAO.ProjectDAOImplementation.remainingEquipmentFunds(java.lang.String)> in (EquipmentBuyingController.java:159)
Method <project.CONTROL.EquipmentBuyingController.initialize()> calls constructor <project.DAO.ProjectDAOImplementation.<init>()> in (EquipmentBuyingController.java:70)
Method <project.CONTROL.EquipmentBuyingController.initialize()> calls method <project.DAO.ProjectDAOImplementation.remainingEquipmentFunds(java.lang.String)> in (EquipmentBuyingController.java:71)
Method <project.CONTROL.EquipmentRequestCardController.onRequestClick()> calls constructor <project.DAO.LaboratoryDAOImplementation.<init>()> in (EquipmentRequestCardController.java:60)
Method <project.CONTROL.EquipmentRequestCardController.onRequestClick()> calls method <project.DAO.LaboratoryDAOImplementation.equipmentRequest(project.MODEL.EquipmentRequest)> in (EquipmentRequestCardController.java:91)
Method <project.CONTROL.HiringScreenController.hireProjectSalaried()> calls constructor <project.DAO.ProjectDAOImplementation.<init>()> in (HiringScreenController.java:124)
Method <project.CONTROL.HiringScreenController.hireProjectSalaried()> calls method <project.DAO.ProjectDAOImplementation.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> in (HiringScreenController.java:149)
Method <project.CONTROL.HiringScreenController.initialize()> calls constructor <project.DAO.ProjectDAOImplementation.<init>()> in (HiringScreenController.java:69)
Method <project.CONTROL.HiringScreenController.initialize()> calls constructor <project.DAO.ProjectSalariedDAOImplementation.<init>()> in (HiringScreenController.java:68)
Method <project.CONTROL.HiringScreenController.initialize()> calls method <project.DAO.ProjectDAOImplementation.remainingProjectSalariedFunds(java.lang.String)> in (HiringScreenController.java:70)
Method <project.CONTROL.HiringScreenController.initialize()> calls method <project.DAO.ProjectSalariedDAOImplementation.getAllProjectSalaried()> in (HiringScreenController.java:80)
Method <project.CONTROL.LoginController.fillProjectsData(java.util.ArrayList)> calls constructor <project.DAO.ProjectDAOImplementation.<init>()> in (LoginController.java:268)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls constructor <project.DAO.EmployeeDAOImplementation.<init>()> in (LoginController.java:169)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls constructor <project.DAO.LaboratoryDAOImplementation.<init>()> in (LoginController.java:170)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls constructor <project.DAO.ManagerDAOImplements.<init>()> in (LoginController.java:215)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls constructor <project.DAO.SeniorDAOImplementation.<init>()> in (LoginController.java:192)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.DAO.EmployeeDAOImplementation.baseEmpLogin(java.lang.String, java.lang.String)> in (LoginController.java:172)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.DAO.EmployeeDAOImplementation.getEmployeeData(project.MODEL.EmpType, java.lang.String)> in (LoginController.java:180)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.DAO.EmployeeDAOImplementation.getWorkingLaboratory(project.MODEL.EmpType, java.lang.String)> in (LoginController.java:183)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.DAO.LaboratoryDAOImplementation.getEquipment(project.MODEL.Laboratory, project.MODEL.EmpType)> in (LoginController.java:230)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.DAO.LaboratoryDAOImplementation.getProjects(project.MODEL.Laboratory, project.MODEL.EmpType)> in (LoginController.java:233)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.DAO.LaboratoryDAOImplementation.getScientificManager(project.MODEL.Laboratory, project.MODEL.EmpType)> in (LoginController.java:224)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.DAO.ManagerDAOImplements.managerWorkingProjects(java.lang.String, project.MODEL.EmpType)> in (LoginController.java:217)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.DAO.SeniorDAOImplementation.isManagerLaboratory(java.lang.String, project.MODEL.EmpType)> in (LoginController.java:199)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.DAO.SeniorDAOImplementation.isReferentProjects(java.lang.String, project.MODEL.EmpType)> in (LoginController.java:195)
Method <project.CONTROL.LoginController.lambda$fillProjectsData$2(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.DAO.ProjectDAOImplementation.getProjectManager(java.lang.String)> in (LoginController.java:274)
Method <project.CONTROL.LoginController.lambda$fillProjectsData$2(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.DAO.ProjectDAOImplementation.getProjectReferent(java.lang.String)> in (LoginController.java:277)
Method <project.CONTROL.LoginController.lambda$fillProjectsData$2(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.DAO.ProjectDAOImplementation.getWorkingLaboratories(java.lang.String)> in (LoginController.java:271)
Method <project.CONTROL.LoginController.lambda$fillProjectsData$2(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> has parameter of type <project.DAO.ProjectDAOImplementation> in (LoginController.java:0)
Method <project.CONTROL.LoginController.lambda$laboratoryLogin$1(project.DAO.LaboratoryDAOImplementation, project.MODEL.Laboratory)> calls method <project.DAO.LaboratoryDAOImplementation.getEmployees(project.MODEL.Laboratory, project.MODEL.EmpType)> in (LoginController.java:209)
Method <project.CONTROL.LoginController.lambda$laboratoryLogin$1(project.DAO.LaboratoryDAOImplementation, project.MODEL.Laboratory)> calls method <project.DAO.LaboratoryDAOImplementation.getProjects(project.MODEL.Laboratory, project.MODEL.EmpType)> in (LoginController.java:205)
Method <project.CONTROL.LoginController.lambda$laboratoryLogin$1(project.DAO.LaboratoryDAOImplementation, project.MODEL.Laboratory)> has parameter of type <project.DAO.LaboratoryDAOImplementation> in (LoginController.java:0)
Method <project.CONTROL.LoginController.projectLogin()> calls constructor <project.DAO.ProjectSalariedDAOImplementation.<init>()> in (LoginController.java:104)
Method <project.CONTROL.LoginController.projectLogin()> calls method <project.DAO.ProjectSalariedDAOImplementation.getContracts(project.MODEL.ProjectSalaried)> in (LoginController.java:112)
Method <project.CONTROL.LoginController.projectLogin()> calls method <project.DAO.ProjectSalariedDAOImplementation.getProjectSalariedData(java.lang.String)> in (LoginController.java:111)
Method <project.CONTROL.LoginController.projectLogin()> calls method <project.DAO.ProjectSalariedDAOImplementation.projectSalariedLogin(java.lang.String, java.lang.String)> in (LoginController.java:107)
Method <project.CONTROL.ProjectCardController.endProject()> calls constructor <project.DAO.ProjectDAOImplementation.<init>()> in (ProjectCardController.java:111)
Method <project.CONTROL.ProjectCardController.endProject()> calls method <project.DAO.ProjectDAOImplementation.endProject(java.lang.String, project.MODEL.EmpType)> in (ProjectCardController.java:113)
Method <project.CONTROL.SelectedLaboratoryCardController.getProjects()> calls constructor <project.DAO.ProjectDAOImplementation.<init>()> in (SelectedLaboratoryCardController.java:265)
Method <project.CONTROL.SelectedLaboratoryCardController.getProjects()> calls method <project.DAO.ProjectDAOImplementation.getAvailableProjects()> in (SelectedLaboratoryCardController.java:266)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls constructor <project.DAO.LaboratoryDAOImplementation.<init>()> in (SelectedLaboratoryCardController.java:183)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls constructor <project.DAO.ProjectDAOImplementation.<init>()> in (SelectedLaboratoryCardController.java:166)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.DAO.LaboratoryDAOImplementation.joinProject(int, java.lang.String, project.MODEL.EmpType)> in (SelectedLaboratoryCardController.java:184)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.DAO.ProjectDAOImplementation.getEquipmentRequests(java.lang.String)> in (SelectedLaboratoryCardController.java:168)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.DAO.ProjectDAOImplementation.getProjectContracts(java.lang.String)> in (SelectedLaboratoryCardController.java:180)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.DAO.ProjectDAOImplementation.getProjectManager(java.lang.String)> in (SelectedLaboratoryCardController.java:174)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.DAO.ProjectDAOImplementation.getProjectReferent(java.lang.String)> in (SelectedLaboratoryCardController.java:177)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.DAO.ProjectDAOImplementation.getWorkingLaboratories(java.lang.String)> in (SelectedLaboratoryCardController.java:171)
Method <project.CONTROL.SelectedLaboratoryCardController.leaveProject(project.MODEL.Project)> calls constructor <project.DAO.LaboratoryDAOImplementation.<init>()> in (SelectedLaboratoryCardController.java:223)
Method <project.CONTROL.SelectedLaboratoryCardController.leaveProject(project.MODEL.Project)> calls method <project.DAO.LaboratoryDAOImplementation.leaveProject(int, java.lang.String, project.MODEL.EmpType)> in (SelectedLaboratoryCardController.java:224)
	at com.tngtech.archunit.lang.ArchRule$Assertions.assertNoViolation(ArchRule.java:94)
	at com.tngtech.archunit.lang.ArchRule$Assertions.check(ArchRule.java:82)
	at com.tngtech.archunit.library.Architectures$LayeredArchitecture.check(Architectures.java:291)
	at com.tngtech.archunit.junit.ArchRuleExecution.evaluateOn(ArchRuleExecution.java:43)
	at com.tngtech.archunit.junit.ArchUnitRunner.runChild(ArchUnitRunner.java:154)
	at com.tngtech.archunit.junit.ArchUnitRunner.runChild(ArchUnitRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at com.tngtech.archunit.junit.ArchUnitRunner$1.evaluate(ArchUnitRunner.java:88)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

model_dependencies_are_respected(LayeredArchitectureTest)  Time elapsed: 0.129 sec  <<< FAILURE!
java.lang.AssertionError: Architecture Violation [Priority: MEDIUM] - Rule 'Layered architecture consisting of
layer 'View' ('project.VIEW..')
layer 'Controller' ('project.CONTROL..')
layer 'Model' ('project.MODEL..')
layer 'Database' ('project.DAO..')
where layer 'Model' may not be accessed by any layer' was violated (520 times):
Class <project.CONTROL.HiringScreenController$1> has generic superclass <javafx.scene.control.TableRow<project.MODEL.ProjectSalaried>> with type argument depending on <project.MODEL.ProjectSalaried> in (HiringScreenController.java:0)
Constructor <project.CONTROL.EmployeeDashboardController.<init>(project.MODEL.Employee)> has parameter of type <project.MODEL.Employee> in (EmployeeDashboardController.java:0)
Constructor <project.CONTROL.EquipmentBuyingController.<init>(project.MODEL.Project, project.MODEL.EquipmentRequest)> has parameter of type <project.MODEL.EquipmentRequest> in (EquipmentBuyingController.java:0)
Constructor <project.CONTROL.EquipmentBuyingController.<init>(project.MODEL.Project, project.MODEL.EquipmentRequest)> has parameter of type <project.MODEL.Project> in (EquipmentBuyingController.java:0)
Constructor <project.CONTROL.EquipmentRequestCardController.<init>(project.MODEL.Laboratory, project.MODEL.Project)> has parameter of type <project.MODEL.Laboratory> in (EquipmentRequestCardController.java:0)
Constructor <project.CONTROL.EquipmentRequestCardController.<init>(project.MODEL.Laboratory, project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (EquipmentRequestCardController.java:0)
Constructor <project.CONTROL.HiringScreenController.<init>(project.MODEL.Project, project.MODEL.Employee)> has parameter of type <project.MODEL.Employee> in (HiringScreenController.java:0)
Constructor <project.CONTROL.HiringScreenController.<init>(project.MODEL.Project, project.MODEL.Employee)> has parameter of type <project.MODEL.Project> in (HiringScreenController.java:0)
Constructor <project.CONTROL.ProjectCardController.<init>(project.MODEL.Project, project.MODEL.Employee, javafx.scene.control.TableView)> has parameter of type <project.MODEL.Employee> in (ProjectCardController.java:0)
Constructor <project.CONTROL.ProjectCardController.<init>(project.MODEL.Project, project.MODEL.Employee, javafx.scene.control.TableView)> has parameter of type <project.MODEL.Project> in (ProjectCardController.java:0)
Constructor <project.CONTROL.ProjectSalariedDashboardController.<init>(project.MODEL.ProjectSalaried)> has parameter of type <project.MODEL.ProjectSalaried> in (ProjectSalariedDashboardController.java:0)
Constructor <project.CONTROL.SelectedLaboratoryCardController.<init>(project.MODEL.Laboratory, java.util.ArrayList)> has generic parameter type <java.util.ArrayList<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Constructor <project.CONTROL.SelectedLaboratoryCardController.<init>(project.MODEL.Laboratory, java.util.ArrayList)> has parameter of type <project.MODEL.Laboratory> in (SelectedLaboratoryCardController.java:0)
Constructor <project.VIEW.EquipmentRequestCard.<init>(project.MODEL.Laboratory, project.MODEL.Project)> has parameter of type <project.MODEL.Laboratory> in (EquipmentRequestCard.java:0)
Constructor <project.VIEW.EquipmentRequestCard.<init>(project.MODEL.Laboratory, project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (EquipmentRequestCard.java:0)
Field <project.CONTROL.EmployeeDashboardController.empManagerLabsTable> has generic type <javafx.scene.control.TableView<project.MODEL.Laboratory>> with type argument depending on <project.MODEL.Laboratory> in (EmployeeDashboardController.java:0)
Field <project.CONTROL.EmployeeDashboardController.employee> has type <project.MODEL.Employee> in (EmployeeDashboardController.java:0)
Field <project.CONTROL.EmployeeDashboardController.equipmentRequestTable> has generic type <javafx.scene.control.TableView<project.MODEL.EquipmentRequest>> with type argument depending on <project.MODEL.EquipmentRequest> in (EmployeeDashboardController.java:0)
Field <project.CONTROL.EmployeeDashboardController.hiredProjectSalariedTable> has generic type <javafx.scene.control.TableView<project.MODEL.ProjectSalaried>> with type argument depending on <project.MODEL.ProjectSalaried> in (EmployeeDashboardController.java:0)
Field <project.CONTROL.EmployeeDashboardController.labWorkingProjectsTable> has generic type <javafx.scene.control.TableView<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (EmployeeDashboardController.java:0)
Field <project.CONTROL.EmployeeDashboardController.projectsTable> has generic type <javafx.scene.control.TableView<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (EmployeeDashboardController.java:0)
Field <project.CONTROL.EquipmentBuyingController.currentEquipmentRequest> has type <project.MODEL.EquipmentRequest> in (EquipmentBuyingController.java:0)
Field <project.CONTROL.EquipmentBuyingController.currentProject> has type <project.MODEL.Project> in (EquipmentBuyingController.java:0)
Field <project.CONTROL.EquipmentBuyingController.equipmentLog> has generic type <javafx.scene.control.TableView<project.MODEL.Equipment>> with type argument depending on <project.MODEL.Equipment> in (EquipmentBuyingController.java:0)
Field <project.CONTROL.EquipmentRequestCardController.equipmentRequest> has type <project.MODEL.EquipmentRequest> in (EquipmentRequestCardController.java:0)
Field <project.CONTROL.EquipmentRequestCardController.laboratory> has type <project.MODEL.Laboratory> in (EquipmentRequestCardController.java:0)
Field <project.CONTROL.EquipmentRequestCardController.project> has type <project.MODEL.Project> in (EquipmentRequestCardController.java:0)
Field <project.CONTROL.HiringScreenController.allProjectSalaried> has generic type <java.util.ArrayList<project.MODEL.ProjectSalaried>> with type argument depending on <project.MODEL.ProjectSalaried> in (HiringScreenController.java:0)
Field <project.CONTROL.HiringScreenController.currentEmployee> has type <project.MODEL.Employee> in (HiringScreenController.java:0)
Field <project.CONTROL.HiringScreenController.currentProject> has type <project.MODEL.Project> in (HiringScreenController.java:0)
Field <project.CONTROL.HiringScreenController.hiringFirstNameColumn> has generic type <javafx.scene.control.TableColumn<project.MODEL.ProjectSalaried, java.lang.String>> with type argument depending on <project.MODEL.ProjectSalaried> in (HiringScreenController.java:0)
Field <project.CONTROL.HiringScreenController.hiringLastNameColumn> has generic type <javafx.scene.control.TableColumn<project.MODEL.ProjectSalaried, java.lang.String>> with type argument depending on <project.MODEL.ProjectSalaried> in (HiringScreenController.java:0)
Field <project.CONTROL.HiringScreenController.hiringRoleColumn> has generic type <javafx.scene.control.TableColumn<project.MODEL.ProjectSalaried, java.lang.String>> with type argument depending on <project.MODEL.ProjectSalaried> in (HiringScreenController.java:0)
Field <project.CONTROL.HiringScreenController.hiringTable> has generic type <javafx.scene.control.TableView<project.MODEL.ProjectSalaried>> with type argument depending on <project.MODEL.ProjectSalaried> in (HiringScreenController.java:0)
Field <project.CONTROL.ProjectCardController.employee> has type <project.MODEL.Employee> in (ProjectCardController.java:0)
Field <project.CONTROL.ProjectCardController.project> has type <project.MODEL.Project> in (ProjectCardController.java:0)
Field <project.CONTROL.ProjectSalariedDashboardController.currAssunzione> has generic type <javafx.scene.control.TableColumn<project.MODEL.Contract, java.time.LocalDate>> with type argument depending on <project.MODEL.Contract> in (ProjectSalariedDashboardController.java:0)
Field <project.CONTROL.ProjectSalariedDashboardController.currCompenso> has generic type <javafx.scene.control.TableColumn<project.MODEL.Contract, java.lang.Float>> with type argument depending on <project.MODEL.Contract> in (ProjectSalariedDashboardController.java:0)
Field <project.CONTROL.ProjectSalariedDashboardController.currScadenza> has generic type <javafx.scene.control.TableColumn<project.MODEL.Contract, java.time.LocalDate>> with type argument depending on <project.MODEL.Contract> in (ProjectSalariedDashboardController.java:0)
Field <project.CONTROL.ProjectSalariedDashboardController.currentContractsTable> has generic type <javafx.scene.control.TableView<project.MODEL.Contract>> with type argument depending on <project.MODEL.Contract> in (ProjectSalariedDashboardController.java:0)
Field <project.CONTROL.ProjectSalariedDashboardController.employee> has type <project.MODEL.ProjectSalaried> in (ProjectSalariedDashboardController.java:0)
Field <project.CONTROL.ProjectSalariedDashboardController.oldAssunzione> has generic type <javafx.scene.control.TableColumn<project.MODEL.Contract, java.time.LocalDate>> with type argument depending on <project.MODEL.Contract> in (ProjectSalariedDashboardController.java:0)
Field <project.CONTROL.ProjectSalariedDashboardController.oldCompenso> has generic type <javafx.scene.control.TableColumn<project.MODEL.Contract, java.lang.Float>> with type argument depending on <project.MODEL.Contract> in (ProjectSalariedDashboardController.java:0)
Field <project.CONTROL.ProjectSalariedDashboardController.oldContractsTable> has generic type <javafx.scene.control.TableView<project.MODEL.Contract>> with type argument depending on <project.MODEL.Contract> in (ProjectSalariedDashboardController.java:0)
Field <project.CONTROL.ProjectSalariedDashboardController.oldScadenza> has generic type <javafx.scene.control.TableColumn<project.MODEL.Contract, java.time.LocalDate>> with type argument depending on <project.MODEL.Contract> in (ProjectSalariedDashboardController.java:0)
Field <project.CONTROL.SelectedLaboratoryCardController.employeesTable> has generic type <javafx.scene.control.TableView<project.MODEL.Employee>> with type argument depending on <project.MODEL.Employee> in (SelectedLaboratoryCardController.java:0)
Field <project.CONTROL.SelectedLaboratoryCardController.laboratory> has type <project.MODEL.Laboratory> in (SelectedLaboratoryCardController.java:0)
Field <project.CONTROL.SelectedLaboratoryCardController.projectsTable> has generic type <javafx.scene.control.TableView<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Field <project.CONTROL.SelectedLaboratoryCardController.referentProjects> has generic type <java.util.ArrayList<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Field <project.CONTROL.SelectedLaboratoryCardController.workingProjectsTable> has generic type <javafx.scene.control.TableView<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Field <project.VIEW.EquipmentRequestCard.laboratory> has type <project.MODEL.Laboratory> in (EquipmentRequestCard.java:0)
Field <project.VIEW.EquipmentRequestCard.project> has type <project.MODEL.Project> in (EquipmentRequestCard.java:0)
Method <project.CONTROL.EmployeeDashboardController.getSelectedEquipment()> calls method <project.MODEL.Employee.getLaboratory()> in (EmployeeDashboardController.java:298)
Method <project.CONTROL.EmployeeDashboardController.getSelectedEquipment()> calls method <project.MODEL.Equipment.getName()> in (EmployeeDashboardController.java:302)
Method <project.CONTROL.EmployeeDashboardController.getSelectedEquipment()> calls method <project.MODEL.Equipment.getTechSpecs()> in (EmployeeDashboardController.java:302)
Method <project.CONTROL.EmployeeDashboardController.getSelectedEquipment()> calls method <project.MODEL.Equipment.getType()> in (EmployeeDashboardController.java:302)
Method <project.CONTROL.EmployeeDashboardController.getSelectedEquipment()> calls method <project.MODEL.EquipmentRequest.getLaboratory()> in (EmployeeDashboardController.java:298)
Method <project.CONTROL.EmployeeDashboardController.getSelectedEquipment()> calls method <project.MODEL.Laboratory.getLabCode()> in (EmployeeDashboardController.java:298)
Method <project.CONTROL.EmployeeDashboardController.getSelectedEquipment()> calls method <project.MODEL.Project.getEquipments()> in (EmployeeDashboardController.java:300)
Method <project.CONTROL.EmployeeDashboardController.initialize()> calls method <project.MODEL.EmpType.ordinal()> in (EmployeeDashboardController.java:93)
Method <project.CONTROL.EmployeeDashboardController.initialize()> calls method <project.MODEL.EmpType.toString()> in (EmployeeDashboardController.java:84)
Method <project.CONTROL.EmployeeDashboardController.initialize()> calls method <project.MODEL.Employee.getFirstName()> in (EmployeeDashboardController.java:83)
Method <project.CONTROL.EmployeeDashboardController.initialize()> calls method <project.MODEL.Employee.getLastName()> in (EmployeeDashboardController.java:83)
Method <project.CONTROL.EmployeeDashboardController.initialize()> calls method <project.MODEL.Employee.getType()> in (EmployeeDashboardController.java:84)
Method <project.CONTROL.EmployeeDashboardController.initialize()> calls method <project.MODEL.Employee.getType()> in (EmployeeDashboardController.java:93)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$3(project.DAO.ProjectDAOImplementation, project.MODEL.Project, project.MODEL.Laboratory)> has parameter of type <project.MODEL.Laboratory> in (EmployeeDashboardController.java:0)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$3(project.DAO.ProjectDAOImplementation, project.MODEL.Project, project.MODEL.Laboratory)> has parameter of type <project.MODEL.Project> in (EmployeeDashboardController.java:0)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$4(project.MODEL.Project, project.MODEL.Contract)> calls method <project.MODEL.Contract.setProject(project.MODEL.Project)> in (EmployeeDashboardController.java:465)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$4(project.MODEL.Project, project.MODEL.Contract)> has parameter of type <project.MODEL.Contract> in (EmployeeDashboardController.java:0)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$4(project.MODEL.Project, project.MODEL.Contract)> has parameter of type <project.MODEL.Project> in (EmployeeDashboardController.java:0)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$5(project.DAO.ProjectDAOImplementation, project.MODEL.Project, project.MODEL.Laboratory)> has parameter of type <project.MODEL.Laboratory> in (EmployeeDashboardController.java:0)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$5(project.DAO.ProjectDAOImplementation, project.MODEL.Project, project.MODEL.Laboratory)> has parameter of type <project.MODEL.Project> in (EmployeeDashboardController.java:0)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.getContracts()> in (EmployeeDashboardController.java:465)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (EmployeeDashboardController.java:447)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (EmployeeDashboardController.java:450)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (EmployeeDashboardController.java:453)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (EmployeeDashboardController.java:456)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (EmployeeDashboardController.java:459)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.getLaboratories()> in (EmployeeDashboardController.java:461)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.getLaboratories()> in (EmployeeDashboardController.java:466)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.setContracts(java.util.ArrayList)> in (EmployeeDashboardController.java:458)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.setEquipmentRequests(java.util.ArrayList)> in (EmployeeDashboardController.java:446)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.setLaboratories(java.util.ArrayList)> in (EmployeeDashboardController.java:449)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.setManager(project.MODEL.Manager)> in (EmployeeDashboardController.java:452)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.setScientificReferent(project.MODEL.Senior)> in (EmployeeDashboardController.java:455)
Method <project.CONTROL.EmployeeDashboardController.lambda$loadProjectTab$6(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (EmployeeDashboardController.java:0)
Method <project.CONTROL.EmployeeDashboardController.lambda$showSelectedLaboratory$2(javafx.stage.Stage, project.MODEL.Laboratory, javafx.stage.WindowEvent)> calls method <project.MODEL.Employee.getLaboratory()> in (EmployeeDashboardController.java:364)
Method <project.CONTROL.EmployeeDashboardController.lambda$showSelectedLaboratory$2(javafx.stage.Stage, project.MODEL.Laboratory, javafx.stage.WindowEvent)> calls method <project.MODEL.Laboratory.getLabCode()> in (EmployeeDashboardController.java:364)
Method <project.CONTROL.EmployeeDashboardController.lambda$showSelectedLaboratory$2(javafx.stage.Stage, project.MODEL.Laboratory, javafx.stage.WindowEvent)> calls method <project.MODEL.Laboratory.getProjects()> in (EmployeeDashboardController.java:366)
Method <project.CONTROL.EmployeeDashboardController.lambda$showSelectedLaboratory$2(javafx.stage.Stage, project.MODEL.Laboratory, javafx.stage.WindowEvent)> has parameter of type <project.MODEL.Laboratory> in (EmployeeDashboardController.java:0)
Method <project.CONTROL.EmployeeDashboardController.lambda$showSelectedProject$1(project.MODEL.Contract)> calls method <project.MODEL.Contract.getProjectSalaried()> in (EmployeeDashboardController.java:211)
Method <project.CONTROL.EmployeeDashboardController.lambda$showSelectedProject$1(project.MODEL.Contract)> has parameter of type <project.MODEL.Contract> in (EmployeeDashboardController.java:0)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Employee.getLaboratory()> in (EmployeeDashboardController.java:391)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Employee.getLaboratory()> in (EmployeeDashboardController.java:394)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Employee.getLaboratory()> in (EmployeeDashboardController.java:395)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Employee.getLaboratory()> in (EmployeeDashboardController.java:396)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Employee.getLaboratory()> in (EmployeeDashboardController.java:403)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Employee.getLaboratory()> in (EmployeeDashboardController.java:407)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Equipment.getName()> in (EmployeeDashboardController.java:409)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Equipment.getTechSpecs()> in (EmployeeDashboardController.java:409)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Equipment.getType()> in (EmployeeDashboardController.java:409)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Laboratory.getEquipments()> in (EmployeeDashboardController.java:407)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Laboratory.getName()> in (EmployeeDashboardController.java:394)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Laboratory.getProjects()> in (EmployeeDashboardController.java:403)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Laboratory.getScientificManager()> in (EmployeeDashboardController.java:396)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Laboratory.getTopic()> in (EmployeeDashboardController.java:395)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Senior.getFullName()> in (EmployeeDashboardController.java:396)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> calls method <project.MODEL.Senior.getLaboratories()> in (EmployeeDashboardController.java:417)
Method <project.CONTROL.EmployeeDashboardController.loadLaboratoryTab()> checks instanceof <project.MODEL.Senior> in (EmployeeDashboardController.java:415)
Method <project.CONTROL.EmployeeDashboardController.loadProjectTab()> calls method <project.MODEL.EmpType.ordinal()> in (EmployeeDashboardController.java:442)
Method <project.CONTROL.EmployeeDashboardController.loadProjectTab()> calls method <project.MODEL.Employee.getType()> in (EmployeeDashboardController.java:442)
Method <project.CONTROL.EmployeeDashboardController.loadProjectTab()> calls method <project.MODEL.Manager.getProjects()> in (EmployeeDashboardController.java:440)
Method <project.CONTROL.EmployeeDashboardController.loadProjectTab()> calls method <project.MODEL.Senior.getProjects()> in (EmployeeDashboardController.java:438)
Method <project.CONTROL.EmployeeDashboardController.loadProjectTab()> checks instanceof <project.MODEL.Manager> in (EmployeeDashboardController.java:439)
Method <project.CONTROL.EmployeeDashboardController.loadProjectTab()> checks instanceof <project.MODEL.Senior> in (EmployeeDashboardController.java:437)
Method <project.CONTROL.EmployeeDashboardController.onLabClick()> calls method <project.MODEL.Employee.getLaboratory()> in (EmployeeDashboardController.java:171)
Method <project.CONTROL.EmployeeDashboardController.onLabClick()> calls method <project.MODEL.Employee.getLaboratory()> in (EmployeeDashboardController.java:172)
Method <project.CONTROL.EmployeeDashboardController.onLabClick()> calls method <project.MODEL.Laboratory.getLabCode()> in (EmployeeDashboardController.java:171)
Method <project.CONTROL.EmployeeDashboardController.onLabClick()> calls method <project.MODEL.Laboratory.getProjects()> in (EmployeeDashboardController.java:172)
Method <project.CONTROL.EmployeeDashboardController.onLabClick()> calls method <project.MODEL.Laboratory.setProjects(java.util.ArrayList)> in (EmployeeDashboardController.java:172)
Method <project.CONTROL.EmployeeDashboardController.showSelectedLaboratory(project.MODEL.Laboratory)> calls method <project.MODEL.Senior.getProjects()> in (EmployeeDashboardController.java:340)
Method <project.CONTROL.EmployeeDashboardController.showSelectedLaboratory(project.MODEL.Laboratory)> has parameter of type <project.MODEL.Laboratory> in (EmployeeDashboardController.java:0)
Method <project.CONTROL.EmployeeDashboardController.showSelectedProject(javafx.scene.input.MouseEvent)> calls method <project.MODEL.Project.getContracts()> in (EmployeeDashboardController.java:210)
Method <project.CONTROL.EmployeeDashboardController.showSelectedProject(javafx.scene.input.MouseEvent)> calls method <project.MODEL.Project.getEndDate()> in (EmployeeDashboardController.java:229)
Method <project.CONTROL.EmployeeDashboardController.showSelectedProject(javafx.scene.input.MouseEvent)> calls method <project.MODEL.Project.getEndDate()> in (EmployeeDashboardController.java:230)
Method <project.CONTROL.EmployeeDashboardController.showSelectedProject(javafx.scene.input.MouseEvent)> calls method <project.MODEL.Project.getEquipmentRequests()> in (EmployeeDashboardController.java:206)
Method <project.CONTROL.EquipmentBuyingController.buyEquipment()> calls constructor <project.MODEL.Equipment.<init>(java.lang.String, java.lang.String, java.lang.String, float, java.time.LocalDate)> in (EquipmentBuyingController.java:145)
Method <project.CONTROL.EquipmentBuyingController.buyEquipment()> calls method <project.MODEL.EquipmentRequest.getName()> in (EquipmentBuyingController.java:141)
Method <project.CONTROL.EquipmentBuyingController.buyEquipment()> calls method <project.MODEL.EquipmentRequest.getQuantity()> in (EquipmentBuyingController.java:138)
Method <project.CONTROL.EquipmentBuyingController.buyEquipment()> calls method <project.MODEL.EquipmentRequest.getSpecs()> in (EquipmentBuyingController.java:143)
Method <project.CONTROL.EquipmentBuyingController.buyEquipment()> calls method <project.MODEL.EquipmentRequest.getType()> in (EquipmentBuyingController.java:142)
Method <project.CONTROL.EquipmentBuyingController.buyEquipment()> calls method <project.MODEL.Project.getCup()> in (EquipmentBuyingController.java:159)
Method <project.CONTROL.EquipmentBuyingController.buyEquipment()> calls method <project.MODEL.Project.getEquipmentRequests()> in (EquipmentBuyingController.java:162)
Method <project.CONTROL.EquipmentBuyingController.buyEquipment()> calls method <project.MODEL.Project.getEquipments()> in (EquipmentBuyingController.java:150)
Method <project.CONTROL.EquipmentBuyingController.buyEquipment()> calls method <project.MODEL.Project.getLaboratories()> in (EquipmentBuyingController.java:151)
Method <project.CONTROL.EquipmentBuyingController.initialize()> calls method <project.MODEL.EquipmentRequest.getLaboratory()> in (EquipmentBuyingController.java:105)
Method <project.CONTROL.EquipmentBuyingController.initialize()> calls method <project.MODEL.EquipmentRequest.getName()> in (EquipmentBuyingController.java:102)
Method <project.CONTROL.EquipmentBuyingController.initialize()> calls method <project.MODEL.EquipmentRequest.getQuantity()> in (EquipmentBuyingController.java:104)
Method <project.CONTROL.EquipmentBuyingController.initialize()> calls method <project.MODEL.EquipmentRequest.getSpecs()> in (EquipmentBuyingController.java:103)
Method <project.CONTROL.EquipmentBuyingController.initialize()> calls method <project.MODEL.Laboratory.getName()> in (EquipmentBuyingController.java:105)
Method <project.CONTROL.EquipmentBuyingController.initialize()> calls method <project.MODEL.Project.getCup()> in (EquipmentBuyingController.java:71)
Method <project.CONTROL.EquipmentBuyingController.initialize()> calls method <project.MODEL.Project.getEquipments()> in (EquipmentBuyingController.java:85)
Method <project.CONTROL.EquipmentBuyingController.initialize()> calls method <project.MODEL.Project.getLaboratories()> in (EquipmentBuyingController.java:91)
Method <project.CONTROL.EquipmentBuyingController.initialize()> calls method <project.MODEL.Project.getName()> in (EquipmentBuyingController.java:101)
Method <project.CONTROL.EquipmentBuyingController.lambda$buyEquipment$1(java.util.ArrayList, project.MODEL.Laboratory)> calls method <project.MODEL.EquipmentRequest.getLaboratory()> in (EquipmentBuyingController.java:152)
Method <project.CONTROL.EquipmentBuyingController.lambda$buyEquipment$1(java.util.ArrayList, project.MODEL.Laboratory)> calls method <project.MODEL.Laboratory.getEquipments()> in (EquipmentBuyingController.java:153)
Method <project.CONTROL.EquipmentBuyingController.lambda$buyEquipment$1(java.util.ArrayList, project.MODEL.Laboratory)> calls method <project.MODEL.Laboratory.getLabCode()> in (EquipmentBuyingController.java:152)
Method <project.CONTROL.EquipmentBuyingController.lambda$buyEquipment$1(java.util.ArrayList, project.MODEL.Laboratory)> has parameter of type <project.MODEL.Laboratory> in (EquipmentBuyingController.java:0)
Method <project.CONTROL.EquipmentBuyingController.lambda$initialize$0(java.util.ArrayList, project.MODEL.Laboratory)> calls method <project.MODEL.EquipmentRequest.getLaboratory()> in (EquipmentBuyingController.java:92)
Method <project.CONTROL.EquipmentBuyingController.lambda$initialize$0(java.util.ArrayList, project.MODEL.Laboratory)> calls method <project.MODEL.Laboratory.getEquipments()> in (EquipmentBuyingController.java:93)
Method <project.CONTROL.EquipmentBuyingController.lambda$initialize$0(java.util.ArrayList, project.MODEL.Laboratory)> calls method <project.MODEL.Laboratory.getLabCode()> in (EquipmentBuyingController.java:92)
Method <project.CONTROL.EquipmentBuyingController.lambda$initialize$0(java.util.ArrayList, project.MODEL.Laboratory)> has parameter of type <project.MODEL.Laboratory> in (EquipmentBuyingController.java:0)
Method <project.CONTROL.EquipmentBuyingController.updateTotalPrice()> calls method <project.MODEL.EquipmentRequest.getQuantity()> in (EquipmentBuyingController.java:181)
Method <project.CONTROL.EquipmentRequestCardController.initialize()> calls method <project.MODEL.Laboratory.getName()> in (EquipmentRequestCardController.java:49)
Method <project.CONTROL.EquipmentRequestCardController.initialize()> calls method <project.MODEL.Project.getName()> in (EquipmentRequestCardController.java:50)
Method <project.CONTROL.EquipmentRequestCardController.onRequestClick()> calls constructor <project.MODEL.EquipmentRequest.<init>(java.lang.String, java.lang.String, java.lang.String, int)> in (EquipmentRequestCardController.java:87)
Method <project.CONTROL.EquipmentRequestCardController.onRequestClick()> calls method <project.MODEL.EquipmentRequest.setLaboratory(project.MODEL.Laboratory)> in (EquipmentRequestCardController.java:88)
Method <project.CONTROL.EquipmentRequestCardController.onRequestClick()> calls method <project.MODEL.EquipmentRequest.setProject(project.MODEL.Project)> in (EquipmentRequestCardController.java:89)
Method <project.CONTROL.HiringScreenController$1.lambda$updateItem$0(project.MODEL.ProjectSalaried, project.MODEL.Contract)> calls method <project.MODEL.Contract.getProjectSalaried()> in (HiringScreenController.java:103)
Method <project.CONTROL.HiringScreenController$1.lambda$updateItem$0(project.MODEL.ProjectSalaried, project.MODEL.Contract)> calls method <project.MODEL.ProjectSalaried.getCf()> in (HiringScreenController.java:103)
Method <project.CONTROL.HiringScreenController$1.lambda$updateItem$0(project.MODEL.ProjectSalaried, project.MODEL.Contract)> has parameter of type <project.MODEL.Contract> in (HiringScreenController.java:0)
Method <project.CONTROL.HiringScreenController$1.lambda$updateItem$0(project.MODEL.ProjectSalaried, project.MODEL.Contract)> has parameter of type <project.MODEL.ProjectSalaried> in (HiringScreenController.java:0)
Method <project.CONTROL.HiringScreenController$1.lambda$updateItem$1(project.MODEL.Contract)> calls method <project.MODEL.Contract.getExpiration()> in (HiringScreenController.java:106)
Method <project.CONTROL.HiringScreenController$1.lambda$updateItem$1(project.MODEL.Contract)> has parameter of type <project.MODEL.Contract> in (HiringScreenController.java:0)
Method <project.CONTROL.HiringScreenController$1.updateItem(project.MODEL.ProjectSalaried, boolean)> calls method <project.MODEL.Project.getContracts()> in (HiringScreenController.java:101)
Method <project.CONTROL.HiringScreenController$1.updateItem(project.MODEL.ProjectSalaried, boolean)> has parameter of type <project.MODEL.ProjectSalaried> in (HiringScreenController.java:0)
Method <project.CONTROL.HiringScreenController.hireProjectSalaried()> calls constructor <project.MODEL.Contract.<init>(java.time.LocalDate, java.time.LocalDate, float)> in (HiringScreenController.java:143)
Method <project.CONTROL.HiringScreenController.hireProjectSalaried()> calls constructor <project.MODEL.ProjectSalaried.<init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.time.LocalDate)> in (HiringScreenController.java:138)
Method <project.CONTROL.HiringScreenController.hireProjectSalaried()> calls method <project.MODEL.Contract.setProject(project.MODEL.Project)> in (HiringScreenController.java:145)
Method <project.CONTROL.HiringScreenController.hireProjectSalaried()> calls method <project.MODEL.Contract.setProjectSalaried(project.MODEL.ProjectSalaried)> in (HiringScreenController.java:144)
Method <project.CONTROL.HiringScreenController.hireProjectSalaried()> calls method <project.MODEL.Employee.getType()> in (HiringScreenController.java:149)
Method <project.CONTROL.HiringScreenController.hireProjectSalaried()> calls method <project.MODEL.Project.addContract(project.MODEL.Contract)> in (HiringScreenController.java:146)
Method <project.CONTROL.HiringScreenController.hireProjectSalaried()> calls method <project.MODEL.Project.getCup()> in (HiringScreenController.java:149)
Method <project.CONTROL.HiringScreenController.hireProjectSalaried()> calls method <project.MODEL.ProjectSalaried.addContract(project.MODEL.Contract)> in (HiringScreenController.java:147)
Method <project.CONTROL.HiringScreenController.initialize()> calls method <project.MODEL.Project.getContracts()> in (HiringScreenController.java:83)
Method <project.CONTROL.HiringScreenController.initialize()> calls method <project.MODEL.Project.getCup()> in (HiringScreenController.java:70)
Method <project.CONTROL.HiringScreenController.initialize()> calls method <project.MODEL.Project.getName()> in (HiringScreenController.java:72)
Method <project.CONTROL.HiringScreenController.lambda$initialize$0(project.MODEL.Contract)> calls method <project.MODEL.Contract.getExpiration()> in (HiringScreenController.java:84)
Method <project.CONTROL.HiringScreenController.lambda$initialize$0(project.MODEL.Contract)> calls method <project.MODEL.Contract.getProjectSalaried()> in (HiringScreenController.java:85)
Method <project.CONTROL.HiringScreenController.lambda$initialize$0(project.MODEL.Contract)> has parameter of type <project.MODEL.Contract> in (HiringScreenController.java:0)
Method <project.CONTROL.LoginController.fillProjectsData(java.util.ArrayList)> has generic parameter type <java.util.ArrayList<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (LoginController.java:0)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.MODEL.Employee.getCf()> in (LoginController.java:183)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.MODEL.Employee.getCf()> in (LoginController.java:195)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.MODEL.Employee.getCf()> in (LoginController.java:199)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.MODEL.Employee.getCf()> in (LoginController.java:217)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.MODEL.Employee.setLaboratory(project.MODEL.Laboratory)> in (LoginController.java:227)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.MODEL.Laboratory.setEquipment(java.util.ArrayList)> in (LoginController.java:230)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.MODEL.Laboratory.setProjects(java.util.ArrayList)> in (LoginController.java:237)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.MODEL.Laboratory.setScientificManager(project.MODEL.Senior)> in (LoginController.java:224)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.MODEL.Manager.setProjects(java.util.ArrayList)> in (LoginController.java:216)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.MODEL.Senior.getLaboratories()> in (LoginController.java:202)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.MODEL.Senior.setLaboratories(java.util.ArrayList)> in (LoginController.java:198)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.MODEL.Senior.setProjects(java.util.ArrayList)> in (LoginController.java:194)
Method <project.CONTROL.LoginController.laboratoryLogin()> checks instanceof <project.MODEL.Manager> in (LoginController.java:214)
Method <project.CONTROL.LoginController.laboratoryLogin()> checks instanceof <project.MODEL.Senior> in (LoginController.java:191)
Method <project.CONTROL.LoginController.laboratoryLogin()> gets field <project.MODEL.EmpType.manager> in (LoginController.java:217)
Method <project.CONTROL.LoginController.laboratoryLogin()> gets field <project.MODEL.EmpType.senior> in (LoginController.java:195)
Method <project.CONTROL.LoginController.laboratoryLogin()> gets field <project.MODEL.EmpType.senior> in (LoginController.java:199)
Method <project.CONTROL.LoginController.lambda$fillProjectsData$2(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (LoginController.java:271)
Method <project.CONTROL.LoginController.lambda$fillProjectsData$2(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (LoginController.java:274)
Method <project.CONTROL.LoginController.lambda$fillProjectsData$2(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (LoginController.java:277)
Method <project.CONTROL.LoginController.lambda$fillProjectsData$2(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.setLaboratories(java.util.ArrayList)> in (LoginController.java:270)
Method <project.CONTROL.LoginController.lambda$fillProjectsData$2(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.setManager(project.MODEL.Manager)> in (LoginController.java:273)
Method <project.CONTROL.LoginController.lambda$fillProjectsData$2(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> calls method <project.MODEL.Project.setScientificReferent(project.MODEL.Senior)> in (LoginController.java:276)
Method <project.CONTROL.LoginController.lambda$fillProjectsData$2(project.DAO.ProjectDAOImplementation, project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (LoginController.java:0)
Method <project.CONTROL.LoginController.lambda$laboratoryLogin$1(project.DAO.LaboratoryDAOImplementation, project.MODEL.Laboratory)> calls method <project.MODEL.Laboratory.setEmployees(java.util.ArrayList)> in (LoginController.java:208)
Method <project.CONTROL.LoginController.lambda$laboratoryLogin$1(project.DAO.LaboratoryDAOImplementation, project.MODEL.Laboratory)> calls method <project.MODEL.Laboratory.setProjects(java.util.ArrayList)> in (LoginController.java:204)
Method <project.CONTROL.LoginController.lambda$laboratoryLogin$1(project.DAO.LaboratoryDAOImplementation, project.MODEL.Laboratory)> gets field <project.MODEL.EmpType.senior> in (LoginController.java:204)
Method <project.CONTROL.LoginController.lambda$laboratoryLogin$1(project.DAO.LaboratoryDAOImplementation, project.MODEL.Laboratory)> gets field <project.MODEL.EmpType.senior> in (LoginController.java:208)
Method <project.CONTROL.LoginController.lambda$laboratoryLogin$1(project.DAO.LaboratoryDAOImplementation, project.MODEL.Laboratory)> has parameter of type <project.MODEL.Laboratory> in (LoginController.java:0)
Method <project.CONTROL.LoginController.lambda$projectLogin$0(project.MODEL.Contract)> calls method <project.MODEL.Contract.getProject()> in (LoginController.java:114)
Method <project.CONTROL.LoginController.lambda$projectLogin$0(project.MODEL.Contract)> has parameter of type <project.MODEL.Contract> in (LoginController.java:0)
Method <project.CONTROL.LoginController.lambda$projectLogin$0(project.MODEL.Contract)> has return type <project.MODEL.Project> in (LoginController.java:0)
Method <project.CONTROL.LoginController.projectLogin()> calls method <project.MODEL.ProjectSalaried.setContracts(java.util.ArrayList)> in (LoginController.java:116)
Method <project.CONTROL.ProjectCardController.endProject()> calls method <project.MODEL.Employee.getLaboratory()> in (ProjectCardController.java:122)
Method <project.CONTROL.ProjectCardController.endProject()> calls method <project.MODEL.Employee.getLaboratory()> in (ProjectCardController.java:123)
Method <project.CONTROL.ProjectCardController.endProject()> calls method <project.MODEL.Laboratory.getProjects()> in (ProjectCardController.java:124)
Method <project.CONTROL.ProjectCardController.endProject()> calls method <project.MODEL.Project.getCup()> in (ProjectCardController.java:113)
Method <project.CONTROL.ProjectCardController.endProject()> calls method <project.MODEL.Project.setEndDate(java.time.LocalDate)> in (ProjectCardController.java:116)
Method <project.CONTROL.ProjectCardController.endProject()> gets field <project.MODEL.EmpType.manager> in (ProjectCardController.java:113)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.EmpType.ordinal()> in (ProjectCardController.java:82)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Employee.getType()> in (ProjectCardController.java:82)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Laboratory.getName()> in (ProjectCardController.java:73)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Laboratory.getName()> in (ProjectCardController.java:75)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Laboratory.getName()> in (ProjectCardController.java:77)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Manager.getFullName()> in (ProjectCardController.java:68)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Project.getCup()> in (ProjectCardController.java:59)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Project.getDeadline()> in (ProjectCardController.java:65)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Project.getDescription()> in (ProjectCardController.java:61)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Project.getEndDate()> in (ProjectCardController.java:64)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Project.getEndDate()> in (ProjectCardController.java:93)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Project.getLaboratories()> in (ProjectCardController.java:71)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Project.getLaboratories()> in (ProjectCardController.java:73)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Project.getLaboratories()> in (ProjectCardController.java:75)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Project.getLaboratories()> in (ProjectCardController.java:77)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Project.getManager()> in (ProjectCardController.java:68)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Project.getName()> in (ProjectCardController.java:60)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Project.getScientificReferent()> in (ProjectCardController.java:67)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Project.getStartDate()> in (ProjectCardController.java:63)
Method <project.CONTROL.ProjectCardController.initialize()> calls method <project.MODEL.Senior.getFullName()> in (ProjectCardController.java:67)
Method <project.CONTROL.ProjectCardController.lambda$endProject$0(project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (ProjectCardController.java:125)
Method <project.CONTROL.ProjectCardController.lambda$endProject$0(project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (ProjectCardController.java:0)
Method <project.CONTROL.ProjectSalariedDashboardController.displayRow(javafx.scene.control.TableView)> calls method <project.MODEL.Contract.getProject()> in (ProjectSalariedDashboardController.java:114)
Method <project.CONTROL.ProjectSalariedDashboardController.displayRow(javafx.scene.control.TableView)> has generic parameter type <javafx.scene.control.TableView<project.MODEL.Contract>> with type argument depending on <project.MODEL.Contract> in (ProjectSalariedDashboardController.java:0)
Method <project.CONTROL.ProjectSalariedDashboardController.initialize()> calls method <project.MODEL.ProjectSalaried.getContracts()> in (ProjectSalariedDashboardController.java:63)
Method <project.CONTROL.ProjectSalariedDashboardController.initialize()> calls method <project.MODEL.ProjectSalaried.getFullName()> in (ProjectSalariedDashboardController.java:51)
Method <project.CONTROL.ProjectSalariedDashboardController.initialize()> calls method <project.MODEL.ProjectSalaried.getRole()> in (ProjectSalariedDashboardController.java:52)
Method <project.CONTROL.ProjectSalariedDashboardController.lambda$initialize$0(project.MODEL.Contract)> calls method <project.MODEL.Contract.getExpiration()> in (ProjectSalariedDashboardController.java:64)
Method <project.CONTROL.ProjectSalariedDashboardController.lambda$initialize$0(project.MODEL.Contract)> calls method <project.MODEL.Contract.getExpiration()> in (ProjectSalariedDashboardController.java:65)
Method <project.CONTROL.ProjectSalariedDashboardController.lambda$initialize$0(project.MODEL.Contract)> has parameter of type <project.MODEL.Contract> in (ProjectSalariedDashboardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.getProjects()> calls method <project.MODEL.Laboratory.getProjects()> in (SelectedLaboratoryCardController.java:269)
Method <project.CONTROL.SelectedLaboratoryCardController.getProjects()> has generic return type <java.util.ArrayList<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.initialize()> calls method <project.MODEL.Laboratory.getEmployees()> in (SelectedLaboratoryCardController.java:78)
Method <project.CONTROL.SelectedLaboratoryCardController.initialize()> calls method <project.MODEL.Laboratory.getName()> in (SelectedLaboratoryCardController.java:58)
Method <project.CONTROL.SelectedLaboratoryCardController.initialize()> calls method <project.MODEL.Laboratory.getProjects()> in (SelectedLaboratoryCardController.java:79)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.MODEL.Laboratory.getLabCode()> in (SelectedLaboratoryCardController.java:185)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.MODEL.Laboratory.getProjects()> in (SelectedLaboratoryCardController.java:195)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.MODEL.Project.addLaboratory(project.MODEL.Laboratory)> in (SelectedLaboratoryCardController.java:214)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (SelectedLaboratoryCardController.java:168)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (SelectedLaboratoryCardController.java:171)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (SelectedLaboratoryCardController.java:174)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (SelectedLaboratoryCardController.java:177)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (SelectedLaboratoryCardController.java:180)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (SelectedLaboratoryCardController.java:186)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.MODEL.Project.setContracts(java.util.ArrayList)> in (SelectedLaboratoryCardController.java:179)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.MODEL.Project.setEquipmentRequests(java.util.ArrayList)> in (SelectedLaboratoryCardController.java:167)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.MODEL.Project.setLaboratories(java.util.ArrayList)> in (SelectedLaboratoryCardController.java:170)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.MODEL.Project.setManager(project.MODEL.Manager)> in (SelectedLaboratoryCardController.java:173)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> calls method <project.MODEL.Project.setScientificReferent(project.MODEL.Senior)> in (SelectedLaboratoryCardController.java:176)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> gets field <project.MODEL.EmpType.senior> in (SelectedLaboratoryCardController.java:186)
Method <project.CONTROL.SelectedLaboratoryCardController.joinProject(project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$getProjects$9(project.MODEL.Project, project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (SelectedLaboratoryCardController.java:271)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$getProjects$9(project.MODEL.Project, project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$joinProject$1(project.MODEL.Project, project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (SelectedLaboratoryCardController.java:191)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$joinProject$1(project.MODEL.Project, project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$joinProject$2(project.MODEL.Project, project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (SelectedLaboratoryCardController.java:207)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$joinProject$2(project.MODEL.Project, project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$joinProject$3(project.MODEL.Project)> calls method <project.MODEL.Project.getLaboratories()> in (SelectedLaboratoryCardController.java:210)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$joinProject$3(project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$leaveProject$4(project.MODEL.Project, project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (SelectedLaboratoryCardController.java:236)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$leaveProject$4(project.MODEL.Project, project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$leaveProject$5(project.MODEL.Project, project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (SelectedLaboratoryCardController.java:239)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$leaveProject$5(project.MODEL.Project, project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$leaveProject$6(project.MODEL.Project, project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (SelectedLaboratoryCardController.java:252)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$leaveProject$6(project.MODEL.Project, project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$leaveProject$7(project.MODEL.Laboratory)> calls method <project.MODEL.Laboratory.getLabCode()> in (SelectedLaboratoryCardController.java:256)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$leaveProject$7(project.MODEL.Laboratory)> has parameter of type <project.MODEL.Laboratory> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$leaveProject$8(project.MODEL.Project)> calls method <project.MODEL.Project.getLaboratories()> in (SelectedLaboratoryCardController.java:255)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$leaveProject$8(project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$showEquipmentRequestCard$10(project.MODEL.EquipmentRequest, project.MODEL.Project)> calls method <project.MODEL.EquipmentRequest.getProject()> in (SelectedLaboratoryCardController.java:297)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$showEquipmentRequestCard$10(project.MODEL.EquipmentRequest, project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (SelectedLaboratoryCardController.java:297)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$showEquipmentRequestCard$10(project.MODEL.EquipmentRequest, project.MODEL.Project)> has parameter of type <project.MODEL.EquipmentRequest> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$showEquipmentRequestCard$10(project.MODEL.EquipmentRequest, project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$showEquipmentRequestCard$11(project.MODEL.EquipmentRequest, project.MODEL.Project)> calls method <project.MODEL.Project.getEquipmentRequests()> in (SelectedLaboratoryCardController.java:300)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$showEquipmentRequestCard$11(project.MODEL.EquipmentRequest, project.MODEL.Project)> has parameter of type <project.MODEL.EquipmentRequest> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.lambda$showEquipmentRequestCard$11(project.MODEL.EquipmentRequest, project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.leaveProject(project.MODEL.Project)> calls method <project.MODEL.Laboratory.getLabCode()> in (SelectedLaboratoryCardController.java:225)
Method <project.CONTROL.SelectedLaboratoryCardController.leaveProject(project.MODEL.Project)> calls method <project.MODEL.Laboratory.getProjects()> in (SelectedLaboratoryCardController.java:239)
Method <project.CONTROL.SelectedLaboratoryCardController.leaveProject(project.MODEL.Project)> calls method <project.MODEL.Project.getCup()> in (SelectedLaboratoryCardController.java:226)
Method <project.CONTROL.SelectedLaboratoryCardController.leaveProject(project.MODEL.Project)> gets field <project.MODEL.EmpType.senior> in (SelectedLaboratoryCardController.java:226)
Method <project.CONTROL.SelectedLaboratoryCardController.leaveProject(project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Method <project.CONTROL.SelectedLaboratoryCardController.onProjectClick()> calls method <project.MODEL.Project.getName()> in (SelectedLaboratoryCardController.java:143)
Method <project.CONTROL.SelectedLaboratoryCardController.showEquipmentRequestCard(project.MODEL.Project)> has parameter of type <project.MODEL.Project> in (SelectedLaboratoryCardController.java:0)
Method <project.DAO.DatabaseConnection.baseEmpInstance(project.MODEL.EmpType)> calls method <project.MODEL.EmpType.ordinal()> in (DatabaseConnection.java:43)
Method <project.DAO.DatabaseConnection.baseEmpInstance(project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (DatabaseConnection.java:0)
Method <project.DAO.EmployeeDAO.baseEmpLogin(java.lang.String, java.lang.String)> has return type <project.MODEL.EmpType> in (EmployeeDAO.java:0)
Method <project.DAO.EmployeeDAO.getEmployeeData(project.MODEL.EmpType, java.lang.String)> has parameter of type <project.MODEL.EmpType> in (EmployeeDAO.java:0)
Method <project.DAO.EmployeeDAO.getEmployeeData(project.MODEL.EmpType, java.lang.String)> has return type <project.MODEL.Employee> in (EmployeeDAO.java:0)
Method <project.DAO.EmployeeDAO.getWorkingLaboratory(project.MODEL.EmpType, java.lang.String)> has parameter of type <project.MODEL.EmpType> in (EmployeeDAO.java:0)
Method <project.DAO.EmployeeDAO.getWorkingLaboratory(project.MODEL.EmpType, java.lang.String)> has return type <project.MODEL.Laboratory> in (EmployeeDAO.java:0)
Method <project.DAO.EmployeeDAOImplementation.baseEmpLogin(java.lang.String, java.lang.String)> gets field <project.MODEL.EmpType.junior> in (EmployeeDAOImplementation.java:25)
Method <project.DAO.EmployeeDAOImplementation.baseEmpLogin(java.lang.String, java.lang.String)> gets field <project.MODEL.EmpType.manager> in (EmployeeDAOImplementation.java:28)
Method <project.DAO.EmployeeDAOImplementation.baseEmpLogin(java.lang.String, java.lang.String)> gets field <project.MODEL.EmpType.middle> in (EmployeeDAOImplementation.java:26)
Method <project.DAO.EmployeeDAOImplementation.baseEmpLogin(java.lang.String, java.lang.String)> gets field <project.MODEL.EmpType.senior> in (EmployeeDAOImplementation.java:27)
Method <project.DAO.EmployeeDAOImplementation.baseEmpLogin(java.lang.String, java.lang.String)> has return type <project.MODEL.EmpType> in (EmployeeDAOImplementation.java:0)
Method <project.DAO.EmployeeDAOImplementation.getEmployeeData(project.MODEL.EmpType, java.lang.String)> calls constructor <project.MODEL.Employee.<init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, float, project.MODEL.EmpType)> in (EmployeeDAOImplementation.java:62)
Method <project.DAO.EmployeeDAOImplementation.getEmployeeData(project.MODEL.EmpType, java.lang.String)> calls constructor <project.MODEL.Manager.<init>(project.MODEL.Employee)> in (EmployeeDAOImplementation.java:70)
Method <project.DAO.EmployeeDAOImplementation.getEmployeeData(project.MODEL.EmpType, java.lang.String)> calls constructor <project.MODEL.Senior.<init>(project.MODEL.Employee)> in (EmployeeDAOImplementation.java:69)
Method <project.DAO.EmployeeDAOImplementation.getEmployeeData(project.MODEL.EmpType, java.lang.String)> calls method <project.MODEL.EmpType.ordinal()> in (EmployeeDAOImplementation.java:67)
Method <project.DAO.EmployeeDAOImplementation.getEmployeeData(project.MODEL.EmpType, java.lang.String)> gets field <project.MODEL.EmpType.junior> in (EmployeeDAOImplementation.java:48)
Method <project.DAO.EmployeeDAOImplementation.getEmployeeData(project.MODEL.EmpType, java.lang.String)> gets field <project.MODEL.EmpType.manager> in (EmployeeDAOImplementation.java:51)
Method <project.DAO.EmployeeDAOImplementation.getEmployeeData(project.MODEL.EmpType, java.lang.String)> gets field <project.MODEL.EmpType.middle> in (EmployeeDAOImplementation.java:49)
Method <project.DAO.EmployeeDAOImplementation.getEmployeeData(project.MODEL.EmpType, java.lang.String)> gets field <project.MODEL.EmpType.senior> in (EmployeeDAOImplementation.java:50)
Method <project.DAO.EmployeeDAOImplementation.getEmployeeData(project.MODEL.EmpType, java.lang.String)> has parameter of type <project.MODEL.EmpType> in (EmployeeDAOImplementation.java:0)
Method <project.DAO.EmployeeDAOImplementation.getEmployeeData(project.MODEL.EmpType, java.lang.String)> has return type <project.MODEL.Employee> in (EmployeeDAOImplementation.java:0)
Method <project.DAO.EmployeeDAOImplementation.getWorkingLaboratory(project.MODEL.EmpType, java.lang.String)> calls constructor <project.MODEL.Laboratory.<init>(int, java.lang.String, java.lang.String)> in (EmployeeDAOImplementation.java:99)
Method <project.DAO.EmployeeDAOImplementation.getWorkingLaboratory(project.MODEL.EmpType, java.lang.String)> has parameter of type <project.MODEL.EmpType> in (EmployeeDAOImplementation.java:0)
Method <project.DAO.EmployeeDAOImplementation.getWorkingLaboratory(project.MODEL.EmpType, java.lang.String)> has return type <project.MODEL.Laboratory> in (EmployeeDAOImplementation.java:0)
Method <project.DAO.LaboratoryDAO.equipmentRequest(project.MODEL.EquipmentRequest)> has parameter of type <project.MODEL.EquipmentRequest> in (LaboratoryDAO.java:0)
Method <project.DAO.LaboratoryDAO.getEmployees(project.MODEL.Laboratory, project.MODEL.EmpType)> has generic return type <java.util.ArrayList<project.MODEL.Employee>> with type argument depending on <project.MODEL.Employee> in (LaboratoryDAO.java:0)
Method <project.DAO.LaboratoryDAO.getEmployees(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (LaboratoryDAO.java:0)
Method <project.DAO.LaboratoryDAO.getEmployees(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.Laboratory> in (LaboratoryDAO.java:0)
Method <project.DAO.LaboratoryDAO.getEquipment(project.MODEL.Laboratory, project.MODEL.EmpType)> has generic return type <java.util.ArrayList<project.MODEL.Equipment>> with type argument depending on <project.MODEL.Equipment> in (LaboratoryDAO.java:0)
Method <project.DAO.LaboratoryDAO.getEquipment(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (LaboratoryDAO.java:0)
Method <project.DAO.LaboratoryDAO.getEquipment(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.Laboratory> in (LaboratoryDAO.java:0)
Method <project.DAO.LaboratoryDAO.getProjects(project.MODEL.Laboratory, project.MODEL.EmpType)> has generic return type <java.util.ArrayList<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (LaboratoryDAO.java:0)
Method <project.DAO.LaboratoryDAO.getProjects(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (LaboratoryDAO.java:0)
Method <project.DAO.LaboratoryDAO.getProjects(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.Laboratory> in (LaboratoryDAO.java:0)
Method <project.DAO.LaboratoryDAO.getScientificManager(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (LaboratoryDAO.java:0)
Method <project.DAO.LaboratoryDAO.getScientificManager(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.Laboratory> in (LaboratoryDAO.java:0)
Method <project.DAO.LaboratoryDAO.getScientificManager(project.MODEL.Laboratory, project.MODEL.EmpType)> has return type <project.MODEL.Senior> in (LaboratoryDAO.java:0)
Method <project.DAO.LaboratoryDAO.joinProject(int, java.lang.String, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (LaboratoryDAO.java:0)
Method <project.DAO.LaboratoryDAO.leaveProject(int, java.lang.String, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (LaboratoryDAO.java:0)
Method <project.DAO.LaboratoryDAOImplementation.equipmentRequest(project.MODEL.EquipmentRequest)> calls method <project.MODEL.EquipmentRequest.getLaboratory()> in (LaboratoryDAOImplementation.java:202)
Method <project.DAO.LaboratoryDAOImplementation.equipmentRequest(project.MODEL.EquipmentRequest)> calls method <project.MODEL.EquipmentRequest.getName()> in (LaboratoryDAOImplementation.java:200)
Method <project.DAO.LaboratoryDAOImplementation.equipmentRequest(project.MODEL.EquipmentRequest)> calls method <project.MODEL.EquipmentRequest.getProject()> in (LaboratoryDAOImplementation.java:202)
Method <project.DAO.LaboratoryDAOImplementation.equipmentRequest(project.MODEL.EquipmentRequest)> calls method <project.MODEL.EquipmentRequest.getQuantity()> in (LaboratoryDAOImplementation.java:201)
Method <project.DAO.LaboratoryDAOImplementation.equipmentRequest(project.MODEL.EquipmentRequest)> calls method <project.MODEL.EquipmentRequest.getSpecs()> in (LaboratoryDAOImplementation.java:200)
Method <project.DAO.LaboratoryDAOImplementation.equipmentRequest(project.MODEL.EquipmentRequest)> calls method <project.MODEL.EquipmentRequest.getType()> in (LaboratoryDAOImplementation.java:201)
Method <project.DAO.LaboratoryDAOImplementation.equipmentRequest(project.MODEL.EquipmentRequest)> calls method <project.MODEL.EquipmentRequest.setCode(java.lang.String)> in (LaboratoryDAOImplementation.java:210)
Method <project.DAO.LaboratoryDAOImplementation.equipmentRequest(project.MODEL.EquipmentRequest)> calls method <project.MODEL.Laboratory.getLabCode()> in (LaboratoryDAOImplementation.java:202)
Method <project.DAO.LaboratoryDAOImplementation.equipmentRequest(project.MODEL.EquipmentRequest)> calls method <project.MODEL.Project.getCup()> in (LaboratoryDAOImplementation.java:202)
Method <project.DAO.LaboratoryDAOImplementation.equipmentRequest(project.MODEL.EquipmentRequest)> gets field <project.MODEL.EmpType.senior> in (LaboratoryDAOImplementation.java:205)
Method <project.DAO.LaboratoryDAOImplementation.equipmentRequest(project.MODEL.EquipmentRequest)> has parameter of type <project.MODEL.EquipmentRequest> in (LaboratoryDAOImplementation.java:0)
Method <project.DAO.LaboratoryDAOImplementation.getEmployees(project.MODEL.Laboratory, project.MODEL.EmpType)> calls constructor <project.MODEL.Employee.<init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, float, project.MODEL.EmpType)> in (LaboratoryDAOImplementation.java:117)
Method <project.DAO.LaboratoryDAOImplementation.getEmployees(project.MODEL.Laboratory, project.MODEL.EmpType)> calls method <project.MODEL.Laboratory.getLabCode()> in (LaboratoryDAOImplementation.java:93)
Method <project.DAO.LaboratoryDAOImplementation.getEmployees(project.MODEL.Laboratory, project.MODEL.EmpType)> gets field <project.MODEL.EmpType.junior> in (LaboratoryDAOImplementation.java:104)
Method <project.DAO.LaboratoryDAOImplementation.getEmployees(project.MODEL.Laboratory, project.MODEL.EmpType)> gets field <project.MODEL.EmpType.manager> in (LaboratoryDAOImplementation.java:107)
Method <project.DAO.LaboratoryDAOImplementation.getEmployees(project.MODEL.Laboratory, project.MODEL.EmpType)> gets field <project.MODEL.EmpType.middle> in (LaboratoryDAOImplementation.java:105)
Method <project.DAO.LaboratoryDAOImplementation.getEmployees(project.MODEL.Laboratory, project.MODEL.EmpType)> gets field <project.MODEL.EmpType.senior> in (LaboratoryDAOImplementation.java:106)
Method <project.DAO.LaboratoryDAOImplementation.getEmployees(project.MODEL.Laboratory, project.MODEL.EmpType)> has generic return type <java.util.ArrayList<project.MODEL.Employee>> with type argument depending on <project.MODEL.Employee> in (LaboratoryDAOImplementation.java:0)
Method <project.DAO.LaboratoryDAOImplementation.getEmployees(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (LaboratoryDAOImplementation.java:0)
Method <project.DAO.LaboratoryDAOImplementation.getEmployees(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.Laboratory> in (LaboratoryDAOImplementation.java:0)
Method <project.DAO.LaboratoryDAOImplementation.getEquipment(project.MODEL.Laboratory, project.MODEL.EmpType)> calls constructor <project.MODEL.Equipment.<init>(java.lang.String, java.lang.String, java.lang.String, float, java.time.LocalDate)> in (LaboratoryDAOImplementation.java:151)
Method <project.DAO.LaboratoryDAOImplementation.getEquipment(project.MODEL.Laboratory, project.MODEL.EmpType)> calls method <project.MODEL.Laboratory.getLabCode()> in (LaboratoryDAOImplementation.java:138)
Method <project.DAO.LaboratoryDAOImplementation.getEquipment(project.MODEL.Laboratory, project.MODEL.EmpType)> has generic return type <java.util.ArrayList<project.MODEL.Equipment>> with type argument depending on <project.MODEL.Equipment> in (LaboratoryDAOImplementation.java:0)
Method <project.DAO.LaboratoryDAOImplementation.getEquipment(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (LaboratoryDAOImplementation.java:0)
Method <project.DAO.LaboratoryDAOImplementation.getEquipment(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.Laboratory> in (LaboratoryDAOImplementation.java:0)
Method <project.DAO.LaboratoryDAOImplementation.getProjects(project.MODEL.Laboratory, project.MODEL.EmpType)> calls constructor <project.MODEL.Project.<init>(java.lang.String, java.lang.String, java.lang.String, java.time.LocalDate, java.time.LocalDate, java.time.LocalDate)> in (LaboratoryDAOImplementation.java:43)
Method <project.DAO.LaboratoryDAOImplementation.getProjects(project.MODEL.Laboratory, project.MODEL.EmpType)> calls method <project.MODEL.EmpType.ordinal()> in (LaboratoryDAOImplementation.java:20)
Method <project.DAO.LaboratoryDAOImplementation.getProjects(project.MODEL.Laboratory, project.MODEL.EmpType)> calls method <project.MODEL.Laboratory.getLabCode()> in (LaboratoryDAOImplementation.java:29)
Method <project.DAO.LaboratoryDAOImplementation.getProjects(project.MODEL.Laboratory, project.MODEL.EmpType)> has generic return type <java.util.ArrayList<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (LaboratoryDAOImplementation.java:0)
Method <project.DAO.LaboratoryDAOImplementation.getProjects(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (LaboratoryDAOImplementation.java:0)
Method <project.DAO.LaboratoryDAOImplementation.getProjects(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.Laboratory> in (LaboratoryDAOImplementation.java:0)
Method <project.DAO.LaboratoryDAOImplementation.getScientificManager(project.MODEL.Laboratory, project.MODEL.EmpType)> calls constructor <project.MODEL.Senior.<init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, float)> in (LaboratoryDAOImplementation.java:77)
Method <project.DAO.LaboratoryDAOImplementation.getScientificManager(project.MODEL.Laboratory, project.MODEL.EmpType)> calls method <project.MODEL.Laboratory.getLabCode()> in (LaboratoryDAOImplementation.java:62)
Method <project.DAO.LaboratoryDAOImplementation.getScientificManager(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (LaboratoryDAOImplementation.java:0)
Method <project.DAO.LaboratoryDAOImplementation.getScientificManager(project.MODEL.Laboratory, project.MODEL.EmpType)> has parameter of type <project.MODEL.Laboratory> in (LaboratoryDAOImplementation.java:0)
Method <project.DAO.LaboratoryDAOImplementation.getScientificManager(project.MODEL.Laboratory, project.MODEL.EmpType)> has return type <project.MODEL.Senior> in (LaboratoryDAOImplementation.java:0)
Method <project.DAO.LaboratoryDAOImplementation.joinProject(int, java.lang.String, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (LaboratoryDAOImplementation.java:0)
Method <project.DAO.LaboratoryDAOImplementation.leaveProject(int, java.lang.String, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (LaboratoryDAOImplementation.java:0)
Method <project.DAO.ManagerDAO.managerWorkingProjects(java.lang.String, project.MODEL.EmpType)> has generic return type <java.util.ArrayList<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (ManagerDAO.java:0)
Method <project.DAO.ManagerDAO.managerWorkingProjects(java.lang.String, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (ManagerDAO.java:0)
Method <project.DAO.ManagerDAOImplements.managerWorkingProjects(java.lang.String, project.MODEL.EmpType)> calls constructor <project.MODEL.Project.<init>(java.lang.String, java.lang.String, java.lang.String, java.time.LocalDate, java.time.LocalDate, java.time.LocalDate)> in (ManagerDAOImplements.java:37)
Method <project.DAO.ManagerDAOImplements.managerWorkingProjects(java.lang.String, project.MODEL.EmpType)> has generic return type <java.util.ArrayList<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (ManagerDAOImplements.java:0)
Method <project.DAO.ManagerDAOImplements.managerWorkingProjects(java.lang.String, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (ManagerDAOImplements.java:0)
Method <project.DAO.ProjectDAO.buyEquipment(project.MODEL.Project, project.MODEL.EquipmentRequest, java.lang.Float)> has parameter of type <project.MODEL.EquipmentRequest> in (ProjectDAO.java:0)
Method <project.DAO.ProjectDAO.buyEquipment(project.MODEL.Project, project.MODEL.EquipmentRequest, java.lang.Float)> has parameter of type <project.MODEL.Project> in (ProjectDAO.java:0)
Method <project.DAO.ProjectDAO.endProject(java.lang.String, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (ProjectDAO.java:0)
Method <project.DAO.ProjectDAO.getAvailableProjects()> has generic return type <java.util.ArrayList<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (ProjectDAO.java:0)
Method <project.DAO.ProjectDAO.getBuyedEquipments(project.MODEL.Project, project.MODEL.Laboratory)> has parameter of type <project.MODEL.Laboratory> in (ProjectDAO.java:0)
Method <project.DAO.ProjectDAO.getBuyedEquipments(project.MODEL.Project, project.MODEL.Laboratory)> has parameter of type <project.MODEL.Project> in (ProjectDAO.java:0)
Method <project.DAO.ProjectDAO.getEquipmentRequests(java.lang.String)> has generic return type <java.util.ArrayList<project.MODEL.EquipmentRequest>> with type argument depending on <project.MODEL.EquipmentRequest> in (ProjectDAO.java:0)
Method <project.DAO.ProjectDAO.getProjectContracts(java.lang.String)> has generic return type <java.util.ArrayList<project.MODEL.Contract>> with type argument depending on <project.MODEL.Contract> in (ProjectDAO.java:0)
Method <project.DAO.ProjectDAO.getProjectManager(java.lang.String)> has return type <project.MODEL.Manager> in (ProjectDAO.java:0)
Method <project.DAO.ProjectDAO.getProjectReferent(java.lang.String)> has return type <project.MODEL.Senior> in (ProjectDAO.java:0)
Method <project.DAO.ProjectDAO.getWorkingLaboratories(java.lang.String)> has generic return type <java.util.ArrayList<project.MODEL.Laboratory>> with type argument depending on <project.MODEL.Laboratory> in (ProjectDAO.java:0)
Method <project.DAO.ProjectDAO.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> has parameter of type <project.MODEL.Contract> in (ProjectDAO.java:0)
Method <project.DAO.ProjectDAO.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (ProjectDAO.java:0)
Method <project.DAO.ProjectDAO.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> has parameter of type <project.MODEL.ProjectSalaried> in (ProjectDAO.java:0)
Method <project.DAO.ProjectDAOImplementation.buyEquipment(project.MODEL.Project, project.MODEL.EquipmentRequest, java.lang.Float)> calls method <project.MODEL.EquipmentRequest.getCode()> in (ProjectDAOImplementation.java:164)
Method <project.DAO.ProjectDAOImplementation.buyEquipment(project.MODEL.Project, project.MODEL.EquipmentRequest, java.lang.Float)> has parameter of type <project.MODEL.EquipmentRequest> in (ProjectDAOImplementation.java:0)
Method <project.DAO.ProjectDAOImplementation.buyEquipment(project.MODEL.Project, project.MODEL.EquipmentRequest, java.lang.Float)> has parameter of type <project.MODEL.Project> in (ProjectDAOImplementation.java:0)
Method <project.DAO.ProjectDAOImplementation.endProject(java.lang.String, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (ProjectDAOImplementation.java:0)
Method <project.DAO.ProjectDAOImplementation.getAvailableProjects()> calls constructor <project.MODEL.Project.<init>(java.lang.String, java.lang.String, java.lang.String, java.time.LocalDate, java.time.LocalDate, java.time.LocalDate)> in (ProjectDAOImplementation.java:323)
Method <project.DAO.ProjectDAOImplementation.getAvailableProjects()> gets field <project.MODEL.EmpType.senior> in (ProjectDAOImplementation.java:312)
Method <project.DAO.ProjectDAOImplementation.getAvailableProjects()> has generic return type <java.util.ArrayList<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (ProjectDAOImplementation.java:0)
Method <project.DAO.ProjectDAOImplementation.getBuyedEquipments(project.MODEL.Project, project.MODEL.Laboratory)> calls constructor <project.MODEL.Equipment.<init>(java.lang.String, java.lang.String, java.lang.String, float, java.time.LocalDate)> in (ProjectDAOImplementation.java:358)
Method <project.DAO.ProjectDAOImplementation.getBuyedEquipments(project.MODEL.Project, project.MODEL.Laboratory)> calls method <project.MODEL.Laboratory.addEquipment(project.MODEL.Equipment)> in (ProjectDAOImplementation.java:361)
Method <project.DAO.ProjectDAOImplementation.getBuyedEquipments(project.MODEL.Project, project.MODEL.Laboratory)> calls method <project.MODEL.Laboratory.getLabCode()> in (ProjectDAOImplementation.java:345)
Method <project.DAO.ProjectDAOImplementation.getBuyedEquipments(project.MODEL.Project, project.MODEL.Laboratory)> calls method <project.MODEL.Project.addEquipment(project.MODEL.Equipment)> in (ProjectDAOImplementation.java:360)
Method <project.DAO.ProjectDAOImplementation.getBuyedEquipments(project.MODEL.Project, project.MODEL.Laboratory)> calls method <project.MODEL.Project.getCup()> in (ProjectDAOImplementation.java:345)
Method <project.DAO.ProjectDAOImplementation.getBuyedEquipments(project.MODEL.Project, project.MODEL.Laboratory)> has parameter of type <project.MODEL.Laboratory> in (ProjectDAOImplementation.java:0)
Method <project.DAO.ProjectDAOImplementation.getBuyedEquipments(project.MODEL.Project, project.MODEL.Laboratory)> has parameter of type <project.MODEL.Project> in (ProjectDAOImplementation.java:0)
Method <project.DAO.ProjectDAOImplementation.getEquipmentRequests(java.lang.String)> calls constructor <project.MODEL.EquipmentRequest.<init>(java.lang.String, java.lang.String, java.lang.String, int)> in (ProjectDAOImplementation.java:272)
Method <project.DAO.ProjectDAOImplementation.getEquipmentRequests(java.lang.String)> calls constructor <project.MODEL.Laboratory.<init>(int, java.lang.String, java.lang.String)> in (ProjectDAOImplementation.java:280)
Method <project.DAO.ProjectDAOImplementation.getEquipmentRequests(java.lang.String)> calls method <project.MODEL.EquipmentRequest.setCode(java.lang.String)> in (ProjectDAOImplementation.java:275)
Method <project.DAO.ProjectDAOImplementation.getEquipmentRequests(java.lang.String)> calls method <project.MODEL.EquipmentRequest.setLaboratory(project.MODEL.Laboratory)> in (ProjectDAOImplementation.java:282)
Method <project.DAO.ProjectDAOImplementation.getEquipmentRequests(java.lang.String)> has generic return type <java.util.ArrayList<project.MODEL.EquipmentRequest>> with type argument depending on <project.MODEL.EquipmentRequest> in (ProjectDAOImplementation.java:0)
Method <project.DAO.ProjectDAOImplementation.getProjectContracts(java.lang.String)> calls constructor <project.MODEL.Contract.<init>(java.time.LocalDate, java.time.LocalDate, float)> in (ProjectDAOImplementation.java:229)
Method <project.DAO.ProjectDAOImplementation.getProjectContracts(java.lang.String)> calls constructor <project.MODEL.ProjectSalaried.<init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.time.LocalDate)> in (ProjectDAOImplementation.java:237)
Method <project.DAO.ProjectDAOImplementation.getProjectContracts(java.lang.String)> calls method <project.MODEL.Contract.setProjectSalaried(project.MODEL.ProjectSalaried)> in (ProjectDAOImplementation.java:239)
Method <project.DAO.ProjectDAOImplementation.getProjectContracts(java.lang.String)> calls method <project.MODEL.ProjectSalaried.addContract(project.MODEL.Contract)> in (ProjectDAOImplementation.java:240)
Method <project.DAO.ProjectDAOImplementation.getProjectContracts(java.lang.String)> has generic return type <java.util.ArrayList<project.MODEL.Contract>> with type argument depending on <project.MODEL.Contract> in (ProjectDAOImplementation.java:0)
Method <project.DAO.ProjectDAOImplementation.getProjectManager(java.lang.String)> calls constructor <project.MODEL.Manager.<init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, float)> in (ProjectDAOImplementation.java:95)
Method <project.DAO.ProjectDAOImplementation.getProjectManager(java.lang.String)> has return type <project.MODEL.Manager> in (ProjectDAOImplementation.java:0)
Method <project.DAO.ProjectDAOImplementation.getProjectReferent(java.lang.String)> calls constructor <project.MODEL.Senior.<init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, float)> in (ProjectDAOImplementation.java:68)
Method <project.DAO.ProjectDAOImplementation.getProjectReferent(java.lang.String)> has return type <project.MODEL.Senior> in (ProjectDAOImplementation.java:0)
Method <project.DAO.ProjectDAOImplementation.getWorkingLaboratories(java.lang.String)> calls constructor <project.MODEL.Laboratory.<init>(int, java.lang.String, java.lang.String)> in (ProjectDAOImplementation.java:37)
Method <project.DAO.ProjectDAOImplementation.getWorkingLaboratories(java.lang.String)> has generic return type <java.util.ArrayList<project.MODEL.Laboratory>> with type argument depending on <project.MODEL.Laboratory> in (ProjectDAOImplementation.java:0)
Method <project.DAO.ProjectDAOImplementation.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> calls method <project.MODEL.Contract.getExpiration()> in (ProjectDAOImplementation.java:140)
Method <project.DAO.ProjectDAOImplementation.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> calls method <project.MODEL.Contract.getExpiration()> in (ProjectDAOImplementation.java:141)
Method <project.DAO.ProjectDAOImplementation.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> calls method <project.MODEL.Contract.getHireDate()> in (ProjectDAOImplementation.java:138)
Method <project.DAO.ProjectDAOImplementation.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> calls method <project.MODEL.Contract.getPay()> in (ProjectDAOImplementation.java:137)
Method <project.DAO.ProjectDAOImplementation.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> calls method <project.MODEL.ProjectSalaried.getBirthDate()> in (ProjectDAOImplementation.java:136)
Method <project.DAO.ProjectDAOImplementation.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> calls method <project.MODEL.ProjectSalaried.getCf()> in (ProjectDAOImplementation.java:130)
Method <project.DAO.ProjectDAOImplementation.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> calls method <project.MODEL.ProjectSalaried.getEmail()> in (ProjectDAOImplementation.java:133)
Method <project.DAO.ProjectDAOImplementation.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> calls method <project.MODEL.ProjectSalaried.getFirstName()> in (ProjectDAOImplementation.java:131)
Method <project.DAO.ProjectDAOImplementation.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> calls method <project.MODEL.ProjectSalaried.getLastName()> in (ProjectDAOImplementation.java:132)
Method <project.DAO.ProjectDAOImplementation.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> calls method <project.MODEL.ProjectSalaried.getRole()> in (ProjectDAOImplementation.java:135)
Method <project.DAO.ProjectDAOImplementation.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> has parameter of type <project.MODEL.Contract> in (ProjectDAOImplementation.java:0)
Method <project.DAO.ProjectDAOImplementation.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (ProjectDAOImplementation.java:0)
Method <project.DAO.ProjectDAOImplementation.hireProjectSalaried(java.lang.String, project.MODEL.ProjectSalaried, project.MODEL.Contract, project.MODEL.EmpType)> has parameter of type <project.MODEL.ProjectSalaried> in (ProjectDAOImplementation.java:0)
Method <project.DAO.ProjectDAOImplementation.remainingEquipmentFunds(java.lang.String)> gets field <project.MODEL.EmpType.senior> in (ProjectDAOImplementation.java:200)
Method <project.DAO.ProjectDAOImplementation.remainingProjectSalariedFunds(java.lang.String)> gets field <project.MODEL.EmpType.senior> in (ProjectDAOImplementation.java:181)
Method <project.DAO.ProjectSalariedDAO.getAllProjectSalaried()> has generic return type <java.util.ArrayList<project.MODEL.ProjectSalaried>> with type argument depending on <project.MODEL.ProjectSalaried> in (ProjectSalariedDAO.java:0)
Method <project.DAO.ProjectSalariedDAO.getContracts(project.MODEL.ProjectSalaried)> has generic return type <java.util.ArrayList<project.MODEL.Contract>> with type argument depending on <project.MODEL.Contract> in (ProjectSalariedDAO.java:0)
Method <project.DAO.ProjectSalariedDAO.getContracts(project.MODEL.ProjectSalaried)> has parameter of type <project.MODEL.ProjectSalaried> in (ProjectSalariedDAO.java:0)
Method <project.DAO.ProjectSalariedDAO.getProjectSalariedData(java.lang.String)> has return type <project.MODEL.ProjectSalaried> in (ProjectSalariedDAO.java:0)
Method <project.DAO.ProjectSalariedDAOImplementation.getAllProjectSalaried()> calls constructor <project.MODEL.ProjectSalaried.<init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.time.LocalDate)> in (ProjectSalariedDAOImplementation.java:130)
Method <project.DAO.ProjectSalariedDAOImplementation.getAllProjectSalaried()> calls method <project.MODEL.ProjectSalaried.setContracts(java.util.ArrayList)> in (ProjectSalariedDAOImplementation.java:132)
Method <project.DAO.ProjectSalariedDAOImplementation.getAllProjectSalaried()> has generic return type <java.util.ArrayList<project.MODEL.ProjectSalaried>> with type argument depending on <project.MODEL.ProjectSalaried> in (ProjectSalariedDAOImplementation.java:0)
Method <project.DAO.ProjectSalariedDAOImplementation.getContracts(project.MODEL.ProjectSalaried)> calls constructor <project.MODEL.Contract.<init>(java.time.LocalDate, java.time.LocalDate, float)> in (ProjectSalariedDAOImplementation.java:84)
Method <project.DAO.ProjectSalariedDAOImplementation.getContracts(project.MODEL.ProjectSalaried)> calls constructor <project.MODEL.Project.<init>(java.lang.String, java.lang.String, java.lang.String, java.time.LocalDate, java.time.LocalDate, java.time.LocalDate)> in (ProjectSalariedDAOImplementation.java:94)
Method <project.DAO.ProjectSalariedDAOImplementation.getContracts(project.MODEL.ProjectSalaried)> calls method <project.MODEL.Contract.setProject(project.MODEL.Project)> in (ProjectSalariedDAOImplementation.java:98)
Method <project.DAO.ProjectSalariedDAOImplementation.getContracts(project.MODEL.ProjectSalaried)> calls method <project.MODEL.Contract.setProjectSalaried(project.MODEL.ProjectSalaried)> in (ProjectSalariedDAOImplementation.java:99)
Method <project.DAO.ProjectSalariedDAOImplementation.getContracts(project.MODEL.ProjectSalaried)> calls method <project.MODEL.ProjectSalaried.getCf()> in (ProjectSalariedDAOImplementation.java:70)
Method <project.DAO.ProjectSalariedDAOImplementation.getContracts(project.MODEL.ProjectSalaried)> has generic return type <java.util.ArrayList<project.MODEL.Contract>> with type argument depending on <project.MODEL.Contract> in (ProjectSalariedDAOImplementation.java:0)
Method <project.DAO.ProjectSalariedDAOImplementation.getContracts(project.MODEL.ProjectSalaried)> has parameter of type <project.MODEL.ProjectSalaried> in (ProjectSalariedDAOImplementation.java:0)
Method <project.DAO.ProjectSalariedDAOImplementation.getProjectSalariedData(java.lang.String)> calls constructor <project.MODEL.ProjectSalaried.<init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.time.LocalDate)> in (ProjectSalariedDAOImplementation.java:49)
Method <project.DAO.ProjectSalariedDAOImplementation.getProjectSalariedData(java.lang.String)> has return type <project.MODEL.ProjectSalaried> in (ProjectSalariedDAOImplementation.java:0)
Method <project.DAO.SeniorDAO.isManagerLaboratory(java.lang.String, project.MODEL.EmpType)> has generic return type <java.util.ArrayList<project.MODEL.Laboratory>> with type argument depending on <project.MODEL.Laboratory> in (SeniorDAO.java:0)
Method <project.DAO.SeniorDAO.isManagerLaboratory(java.lang.String, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (SeniorDAO.java:0)
Method <project.DAO.SeniorDAO.isReferentProjects(java.lang.String, project.MODEL.EmpType)> has generic return type <java.util.ArrayList<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (SeniorDAO.java:0)
Method <project.DAO.SeniorDAO.isReferentProjects(java.lang.String, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (SeniorDAO.java:0)
Method <project.DAO.SeniorDAOImplementation.isManagerLaboratory(java.lang.String, project.MODEL.EmpType)> calls constructor <project.MODEL.Laboratory.<init>(int, java.lang.String, java.lang.String)> in (SeniorDAOImplementation.java:65)
Method <project.DAO.SeniorDAOImplementation.isManagerLaboratory(java.lang.String, project.MODEL.EmpType)> has generic return type <java.util.ArrayList<project.MODEL.Laboratory>> with type argument depending on <project.MODEL.Laboratory> in (SeniorDAOImplementation.java:0)
Method <project.DAO.SeniorDAOImplementation.isManagerLaboratory(java.lang.String, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (SeniorDAOImplementation.java:0)
Method <project.DAO.SeniorDAOImplementation.isReferentProjects(java.lang.String, project.MODEL.EmpType)> calls constructor <project.MODEL.Project.<init>(java.lang.String, java.lang.String, java.lang.String, java.time.LocalDate, java.time.LocalDate, java.time.LocalDate)> in (SeniorDAOImplementation.java:35)
Method <project.DAO.SeniorDAOImplementation.isReferentProjects(java.lang.String, project.MODEL.EmpType)> has generic return type <java.util.ArrayList<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (SeniorDAOImplementation.java:0)
Method <project.DAO.SeniorDAOImplementation.isReferentProjects(java.lang.String, project.MODEL.EmpType)> has parameter of type <project.MODEL.EmpType> in (SeniorDAOImplementation.java:0)
Method <project.VIEW.EmployeeDashboard.getScene(project.MODEL.Employee)> has parameter of type <project.MODEL.Employee> in (EmployeeDashboard.java:0)
Method <project.VIEW.EmployeeDashboard.lambda$getScene$0(project.MODEL.Employee, java.lang.Class)> has parameter of type <project.MODEL.Employee> in (EmployeeDashboard.java:0)
Method <project.VIEW.EquipmentBuyingScreen.getScene(project.MODEL.Project, project.MODEL.EquipmentRequest)> has parameter of type <project.MODEL.EquipmentRequest> in (EquipmentBuyingScreen.java:0)
Method <project.VIEW.EquipmentBuyingScreen.getScene(project.MODEL.Project, project.MODEL.EquipmentRequest)> has parameter of type <project.MODEL.Project> in (EquipmentBuyingScreen.java:0)
Method <project.VIEW.EquipmentBuyingScreen.lambda$getScene$0(project.MODEL.Project, project.MODEL.EquipmentRequest, java.lang.Class)> has parameter of type <project.MODEL.EquipmentRequest> in (EquipmentBuyingScreen.java:0)
Method <project.VIEW.EquipmentBuyingScreen.lambda$getScene$0(project.MODEL.Project, project.MODEL.EquipmentRequest, java.lang.Class)> has parameter of type <project.MODEL.Project> in (EquipmentBuyingScreen.java:0)
Method <project.VIEW.HiringScreen.getScene(project.MODEL.Project, project.MODEL.Employee)> has parameter of type <project.MODEL.Employee> in (HiringScreen.java:0)
Method <project.VIEW.HiringScreen.getScene(project.MODEL.Project, project.MODEL.Employee)> has parameter of type <project.MODEL.Project> in (HiringScreen.java:0)
Method <project.VIEW.HiringScreen.lambda$getScene$0(project.MODEL.Project, project.MODEL.Employee, java.lang.Class)> has parameter of type <project.MODEL.Employee> in (HiringScreen.java:0)
Method <project.VIEW.HiringScreen.lambda$getScene$0(project.MODEL.Project, project.MODEL.Employee, java.lang.Class)> has parameter of type <project.MODEL.Project> in (HiringScreen.java:0)
Method <project.VIEW.ProjectCard.getScene(project.MODEL.Project, project.MODEL.Employee, javafx.scene.control.TableView)> has parameter of type <project.MODEL.Employee> in (ProjectCard.java:0)
Method <project.VIEW.ProjectCard.getScene(project.MODEL.Project, project.MODEL.Employee, javafx.scene.control.TableView)> has parameter of type <project.MODEL.Project> in (ProjectCard.java:0)
Method <project.VIEW.ProjectCard.lambda$getScene$0(project.MODEL.Project, project.MODEL.Employee, javafx.scene.control.TableView, java.lang.Class)> has parameter of type <project.MODEL.Employee> in (ProjectCard.java:0)
Method <project.VIEW.ProjectCard.lambda$getScene$0(project.MODEL.Project, project.MODEL.Employee, javafx.scene.control.TableView, java.lang.Class)> has parameter of type <project.MODEL.Project> in (ProjectCard.java:0)
Method <project.VIEW.ProjectSalariedDashboard.getScene(project.MODEL.ProjectSalaried)> has parameter of type <project.MODEL.ProjectSalaried> in (ProjectSalariedDashboard.java:0)
Method <project.VIEW.ProjectSalariedDashboard.lambda$getScene$0(project.MODEL.ProjectSalaried, java.lang.Class)> has parameter of type <project.MODEL.ProjectSalaried> in (ProjectSalariedDashboard.java:0)
Method <project.VIEW.SelectedLaboratoryCard.getScene(project.MODEL.Laboratory, java.util.ArrayList)> has generic parameter type <java.util.ArrayList<project.MODEL.Project>> with type argument depending on <project.MODEL.Project> in (SelectedLaboratoryCard.java:0)
Method <project.VIEW.SelectedLaboratoryCard.getScene(project.MODEL.Laboratory, java.util.ArrayList)> has parameter of type <project.MODEL.Laboratory> in (SelectedLaboratoryCard.java:0)
Method <project.VIEW.SelectedLaboratoryCard.lambda$getScene$0(project.MODEL.Laboratory, java.util.ArrayList, java.lang.Class)> has parameter of type <project.MODEL.Laboratory> in (SelectedLaboratoryCard.java:0)
Static Initializer <project.CONTROL.EmployeeDashboardController$1.<clinit>()> calls method <project.MODEL.EmpType.ordinal()> in (EmployeeDashboardController.java:93)
Static Initializer <project.CONTROL.EmployeeDashboardController$1.<clinit>()> calls method <project.MODEL.EmpType.values()> in (EmployeeDashboardController.java:93)
Static Initializer <project.CONTROL.EmployeeDashboardController$1.<clinit>()> gets field <project.MODEL.EmpType.junior> in (EmployeeDashboardController.java:93)
Static Initializer <project.CONTROL.EmployeeDashboardController$1.<clinit>()> gets field <project.MODEL.EmpType.manager> in (EmployeeDashboardController.java:93)
Static Initializer <project.CONTROL.EmployeeDashboardController$1.<clinit>()> gets field <project.MODEL.EmpType.middle> in (EmployeeDashboardController.java:93)
Static Initializer <project.CONTROL.EmployeeDashboardController$1.<clinit>()> gets field <project.MODEL.EmpType.senior> in (EmployeeDashboardController.java:93)
Static Initializer <project.CONTROL.ProjectCardController$1.<clinit>()> calls method <project.MODEL.EmpType.ordinal()> in (ProjectCardController.java:82)
Static Initializer <project.CONTROL.ProjectCardController$1.<clinit>()> calls method <project.MODEL.EmpType.values()> in (ProjectCardController.java:82)
Static Initializer <project.CONTROL.ProjectCardController$1.<clinit>()> gets field <project.MODEL.EmpType.junior> in (ProjectCardController.java:82)
Static Initializer <project.CONTROL.ProjectCardController$1.<clinit>()> gets field <project.MODEL.EmpType.manager> in (ProjectCardController.java:82)
Static Initializer <project.CONTROL.ProjectCardController$1.<clinit>()> gets field <project.MODEL.EmpType.middle> in (ProjectCardController.java:82)
Static Initializer <project.CONTROL.ProjectCardController$1.<clinit>()> gets field <project.MODEL.EmpType.senior> in (ProjectCardController.java:82)
Static Initializer <project.DAO.DatabaseConnection$1.<clinit>()> calls method <project.MODEL.EmpType.ordinal()> in (DatabaseConnection.java:43)
Static Initializer <project.DAO.DatabaseConnection$1.<clinit>()> calls method <project.MODEL.EmpType.values()> in (DatabaseConnection.java:43)
Static Initializer <project.DAO.DatabaseConnection$1.<clinit>()> gets field <project.MODEL.EmpType.junior> in (DatabaseConnection.java:43)
Static Initializer <project.DAO.DatabaseConnection$1.<clinit>()> gets field <project.MODEL.EmpType.manager> in (DatabaseConnection.java:43)
Static Initializer <project.DAO.DatabaseConnection$1.<clinit>()> gets field <project.MODEL.EmpType.middle> in (DatabaseConnection.java:43)
Static Initializer <project.DAO.DatabaseConnection$1.<clinit>()> gets field <project.MODEL.EmpType.senior> in (DatabaseConnection.java:43)
Static Initializer <project.DAO.EmployeeDAOImplementation$1.<clinit>()> calls method <project.MODEL.EmpType.ordinal()> in (EmployeeDAOImplementation.java:67)
Static Initializer <project.DAO.EmployeeDAOImplementation$1.<clinit>()> calls method <project.MODEL.EmpType.values()> in (EmployeeDAOImplementation.java:67)
Static Initializer <project.DAO.EmployeeDAOImplementation$1.<clinit>()> gets field <project.MODEL.EmpType.junior> in (EmployeeDAOImplementation.java:67)
Static Initializer <project.DAO.EmployeeDAOImplementation$1.<clinit>()> gets field <project.MODEL.EmpType.manager> in (EmployeeDAOImplementation.java:67)
Static Initializer <project.DAO.EmployeeDAOImplementation$1.<clinit>()> gets field <project.MODEL.EmpType.middle> in (EmployeeDAOImplementation.java:67)
Static Initializer <project.DAO.EmployeeDAOImplementation$1.<clinit>()> gets field <project.MODEL.EmpType.senior> in (EmployeeDAOImplementation.java:67)
Static Initializer <project.DAO.LaboratoryDAOImplementation$1.<clinit>()> calls method <project.MODEL.EmpType.ordinal()> in (LaboratoryDAOImplementation.java:20)
Static Initializer <project.DAO.LaboratoryDAOImplementation$1.<clinit>()> calls method <project.MODEL.EmpType.values()> in (LaboratoryDAOImplementation.java:20)
Static Initializer <project.DAO.LaboratoryDAOImplementation$1.<clinit>()> gets field <project.MODEL.EmpType.junior> in (LaboratoryDAOImplementation.java:20)
Static Initializer <project.DAO.LaboratoryDAOImplementation$1.<clinit>()> gets field <project.MODEL.EmpType.manager> in (LaboratoryDAOImplementation.java:20)
Static Initializer <project.DAO.LaboratoryDAOImplementation$1.<clinit>()> gets field <project.MODEL.EmpType.middle> in (LaboratoryDAOImplementation.java:20)
Static Initializer <project.DAO.LaboratoryDAOImplementation$1.<clinit>()> gets field <project.MODEL.EmpType.senior> in (LaboratoryDAOImplementation.java:20)
	at com.tngtech.archunit.lang.ArchRule$Assertions.assertNoViolation(ArchRule.java:94)
	at com.tngtech.archunit.lang.ArchRule$Assertions.check(ArchRule.java:82)
	at com.tngtech.archunit.library.Architectures$LayeredArchitecture.check(Architectures.java:291)
	at com.tngtech.archunit.junit.ArchRuleExecution.evaluateOn(ArchRuleExecution.java:43)
	at com.tngtech.archunit.junit.ArchUnitRunner.runChild(ArchUnitRunner.java:154)
	at com.tngtech.archunit.junit.ArchUnitRunner.runChild(ArchUnitRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at com.tngtech.archunit.junit.ArchUnitRunner$1.evaluate(ArchUnitRunner.java:88)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

view_dependencies_are_respected(LayeredArchitectureTest)  Time elapsed: 0.002 sec  <<< FAILURE!
java.lang.AssertionError: Architecture Violation [Priority: MEDIUM] - Rule 'Layered architecture consisting of
layer 'View' ('project.VIEW..')
layer 'Controller' ('project.CONTROL..')
layer 'Model' ('project.MODEL..')
layer 'Database' ('project.DAO..')
where layer 'View' may not be accessed by any layer' was violated (22 times):
Method <project.CONTROL.EmployeeDashboardController.getSelectedEquipment()> calls constructor <project.VIEW.EquipmentBuyingScreen.<init>()> in (EmployeeDashboardController.java:272)
Method <project.CONTROL.EmployeeDashboardController.getSelectedEquipment()> calls method <project.VIEW.EquipmentBuyingScreen.getScene(project.MODEL.Project, project.MODEL.EquipmentRequest)> in (EmployeeDashboardController.java:276)
Method <project.CONTROL.EmployeeDashboardController.onLabWorkingProjectTableRowClick()> calls constructor <project.VIEW.ProjectCard.<init>()> in (EmployeeDashboardController.java:136)
Method <project.CONTROL.EmployeeDashboardController.onLabWorkingProjectTableRowClick()> calls method <project.VIEW.ProjectCard.getScene(project.MODEL.Project, project.MODEL.Employee, javafx.scene.control.TableView)> in (EmployeeDashboardController.java:138)
Method <project.CONTROL.EmployeeDashboardController.showHiringScreen()> calls constructor <project.VIEW.HiringScreen.<init>()> in (EmployeeDashboardController.java:239)
Method <project.CONTROL.EmployeeDashboardController.showHiringScreen()> calls method <project.VIEW.HiringScreen.getScene(project.MODEL.Project, project.MODEL.Employee)> in (EmployeeDashboardController.java:241)
Method <project.CONTROL.EmployeeDashboardController.showSelectedLaboratory(project.MODEL.Laboratory)> calls constructor <project.VIEW.SelectedLaboratoryCard.<init>()> in (EmployeeDashboardController.java:339)
Method <project.CONTROL.EmployeeDashboardController.showSelectedLaboratory(project.MODEL.Laboratory)> calls method <project.VIEW.SelectedLaboratoryCard.getScene(project.MODEL.Laboratory, java.util.ArrayList)> in (EmployeeDashboardController.java:340)
Method <project.CONTROL.EmployeeDashboardController.showSelectedProject(javafx.scene.input.MouseEvent)> calls constructor <project.VIEW.ProjectCard.<init>()> in (EmployeeDashboardController.java:216)
Method <project.CONTROL.EmployeeDashboardController.showSelectedProject(javafx.scene.input.MouseEvent)> calls method <project.VIEW.ProjectCard.getScene(project.MODEL.Project, project.MODEL.Employee, javafx.scene.control.TableView)> in (EmployeeDashboardController.java:217)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls constructor <project.VIEW.EmployeeDashboard.<init>()> in (LoginController.java:244)
Method <project.CONTROL.LoginController.laboratoryLogin()> calls method <project.VIEW.EmployeeDashboard.getScene(project.MODEL.Employee)> in (LoginController.java:245)
Method <project.CONTROL.LoginController.logOut(javafx.stage.Stage)> calls constructor <project.VIEW.Login.<init>()> in (LoginController.java:292)
Method <project.CONTROL.LoginController.logOut(javafx.stage.Stage)> calls method <project.VIEW.Login.getScene()> in (LoginController.java:293)
Method <project.CONTROL.LoginController.projectLogin()> calls constructor <project.VIEW.ProjectSalariedDashboard.<init>()> in (LoginController.java:119)
Method <project.CONTROL.LoginController.projectLogin()> calls method <project.VIEW.ProjectSalariedDashboard.getScene(project.MODEL.ProjectSalaried)> in (LoginController.java:120)
Method <project.CONTROL.ProjectSalariedDashboardController.displayRow(javafx.scene.control.TableView)> calls constructor <project.VIEW.ProjectCard.<init>()> in (ProjectSalariedDashboardController.java:113)
Method <project.CONTROL.ProjectSalariedDashboardController.displayRow(javafx.scene.control.TableView)> calls method <project.VIEW.ProjectCard.getScene(project.MODEL.Project, project.MODEL.Employee, javafx.scene.control.TableView)> in (ProjectSalariedDashboardController.java:114)
Method <project.CONTROL.SelectedLaboratoryCardController.showEquipmentRequestCard(project.MODEL.Project)> calls constructor <project.VIEW.EquipmentRequestCard.<init>(project.MODEL.Laboratory, project.MODEL.Project)> in (SelectedLaboratoryCardController.java:284)
Method <project.CONTROL.SelectedLaboratoryCardController.showEquipmentRequestCard(project.MODEL.Project)> calls method <project.VIEW.EquipmentRequestCard.getScene()> in (SelectedLaboratoryCardController.java:285)
Method <project.Main.start(javafx.stage.Stage)> calls constructor <project.VIEW.Login.<init>()> in (Main.java:15)
Method <project.Main.start(javafx.stage.Stage)> calls method <project.VIEW.Login.getScene()> in (Main.java:16)
	at com.tngtech.archunit.lang.ArchRule$Assertions.assertNoViolation(ArchRule.java:94)
	at com.tngtech.archunit.lang.ArchRule$Assertions.check(ArchRule.java:82)
	at com.tngtech.archunit.library.Architectures$LayeredArchitecture.check(Architectures.java:291)
	at com.tngtech.archunit.junit.ArchRuleExecution.evaluateOn(ArchRuleExecution.java:43)
	at com.tngtech.archunit.junit.ArchUnitRunner.runChild(ArchUnitRunner.java:154)
	at com.tngtech.archunit.junit.ArchUnitRunner.runChild(ArchUnitRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at com.tngtech.archunit.junit.ArchUnitRunner$1.evaluate(ArchUnitRunner.java:88)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

